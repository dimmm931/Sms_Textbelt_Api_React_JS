{"version":3,"sources":["MyComponents/TextArea/functions_injected/scrollResults.js","images/loaddd.gif","logo.svg","images/loaddd_PREV.gif","images/error.gif","MyComponents/TextArea/functions_injected/sendSmsMessage.js","MyComponents/TextArea/child_components/DisplayPhoneRegExpMessage.js","MyComponents/TextArea/child_components/CountSmsText.js","MyComponents/TextArea/child_components/FlashMessage.js","MyComponents/TextArea/child_components/AjaxLoader.js","MyComponents/TextArea/child_components/ResultFromTextbeltApi.js","MyComponents/TextArea/TextArea.js","MyComponents/TextArea/functions_injected/Validate_RegExp.js","MyComponents/TextArea/functions_injected/Autocomplete.js","MyComponents/Error/ErrorLayout.js","MyComponents/LiftUpComponent/LiftedTo_Component.js","MyComponents/TechnicalInfoComponent/TechnicalInfo.js","MyComponents/TopSectionButtons/TopSectionButtons.js","MyComponents/TopSectionButtons/functions_injected/changeThemeInjected.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","scrollResults","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","divName","parent","$","animate","scrollTop","offset","top","stringX","eval","module","exports","p","runSomeActionsOnAjaxResult","that","fadeOut","setState","ifUserClickedSendSms","window","screen","width","prop","setTimeout","css","DisplayPhoneRegExpMessage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","status","phoneNumberErrorMessageX","Component","CountSmsText","smsText","FlashMessage","AjaxLoader","src","loaderX","alt","ResultFromTextbeltApi","_this$state","deliveryStatus","textIfTestModeOn","ifTestModeData2","defineProperty","checkSmsDeliveryStatus","bind","assertThisInitialized","show","ajaxURL","location","href","match","ajax","url","type","dataType","crossDomain","data","serverTextID","answer","textId","success","deliveredOK","error","swal","handleToUpdateIfDeliverClicked","myObjX","keys","map","key","index","showHideDivData","loaderX1","clientMessage","toString","errorFromApi","quotaRemaining","value","onClick","id","ifUserClickedCheckDeliveryData","TextAreaX","RegExp_Phone","RegExp_Phone_UA","limitLatin","limitCyrill","phoneNumberChild","smsTextChild","phoneNumberErrorMessage","isEnable","limitForSmstext","ifTestMode","ifTestModeData","answerFromTextbelt","ifUserClickedCheckDelivery","run_This_Component_Functions_In_Queue","getFormValue","handlePhoneNumberKeyPress","handleTextAreaKeyPress","resetFields","myValidate","thisX","regExp","butttonToDisable","messageErr","messageSuccess","e","html","AutocompleteFunction","autocomplete","minLength","source","label","select","event","ui","item","preventDefault","displaySelectedCategoryLabel","_renderItem","ul","append","appendTo","ifCyrillicSmsCheck","handleTextAreaPaste","sendSmsMessage","myData","serverPhone","serverSms","serverIfTestStatus","liftTechAlertsInfoHandler","cellar","JSON","stringify","textBeltResponse","prevState","objectSpread","errorX","someArg","is","trim","regExpp","_this2","inputPhone","target","messageError","messageOK","liftPhoneNumberHandler","_this3","length","clearQueue","fadeIn","substring","liftSmsTextHandler","_this4","pastedData","clipboardData","getData","val","child_components_DisplayPhoneRegExpMessage","placeholder","onChange","rows","cols","onPaste","child_components_CountSmsText","child_components_ResultFromTextbeltApi","child_components_AjaxLoader","child_components_FlashMessage","ErrorLayout","errorIMG","LiftedTo_Component","newV","passedtechInfoValue","i","passedPhoneNumberValue","passedSmsValue","passedIfTestModeValue","TechnicalInfo","data-toggle","role","aria-expanded","aria-controls","LiftUpComponent_LiftedTo_Component","smsTextData","phoneNumberData","techInfoDate","TopSectionButtons","wallPapperCount","testButtonText","runChangeThemeFunct","changeThemeInjected","wallURL","document","getElementsByClassName","style","backgroundImage","err","alert","message","runChangeTestModeFunct","liftTestModeStatustHandler","App","phoneNumber","techInfo","baseState","somePhoneNumber","someSmsText","someTestModeBoolValue","someNewAlertValue","toConsumableArray","concat","name","logo","TextArea_TextArea","TechnicalInfoComponent_TechnicalInfo","Error_ErrorLayout","MyComponents_TopSectionButtons_TopSectionButtons","Boolean","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kIAAAA,oBAAAC,EAAAC,oBAAA,sBAAAC,gBAAA,IAAAC,oCAAAJ,oBAAA,GAAAK,4CAAAL,oBAAAM,EAAAF,qCAIO,SAASD,cAAeI,QAASC,QACvC,GAAqB,qBAAVA,OACJC,8CAAE,cAAcC,QAAQ,CACpBC,UAAWF,8CAAEF,SAASK,SAASC,KAEhC,YACA,CAET,IAAIC,QAAU,aAAeN,OAAS,eACtCC,8CAAE,cAAcC,QAAQ,CACdC,UAAWI,KAAKD,UACjB,8BCfXE,EAAAC,QAAiBjB,EAAAkB,EAAuB,uDCAxCF,EAAAC,QAAiBjB,EAAAkB,EAAuB,qDCAxCF,EAAAC,QAAiBjB,EAAAkB,EAAuB,4DCAxCF,EAAAC,QAAiBjB,EAAAkB,EAAuB,+bCyHxC,SAASC,EAA2BC,GACnCX,IAAE,gBAAgBY,QAAQ,KAG1BD,EAAKE,SAAS,CAACC,sBAAsB,IAGlCC,OAAOC,OAAOC,OAAS,KACtBN,EAAKjB,cAAc,iBAIvBM,IAAE,eAAekB,KAAM,YAAY,GAGnCC,WAAW,WACPnB,IAAE,kBAAkBoB,IAAI,UAAW,MACpC,iBCtHWC,cAhBd,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACZE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFDP,wEAQZ,OACFQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACPH,EAAAC,EAAAC,cAAA,QAAMC,UAAWR,KAAKJ,MAAMa,OAAS,6BAA+B,2BAApE,IAAkGT,KAAKJ,MAAMc,yBAA7G,KADR,aAVkCC,aCoBzBC,cApBd,SAAAA,EAAYhB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAY,IACZf,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAc,GAAAT,KAAAH,KAAMJ,KACDQ,MAAQ,GAFDP,wEAQZ,OACFQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IAEnBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,WAAuCR,KAAKJ,MAAMiB,kBAbjCF,aCkBZG,qBAhBd,SAAAA,EAAYlB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAc,IACZjB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgB,GAAAX,KAAAH,KAAMJ,KACDQ,MAAQ,GAFDP,wEAQZ,OACFQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAAf,QACOH,EAAAC,EAAAC,cAAA,WADP,mBAVqBI,+BCkBZI,cAhBd,SAAAA,EAAYnB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAe,IACZlB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiB,GAAAZ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFDP,wEAQZ,OACIQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACnBH,EAAAC,EAAAC,cAAA,OAAKS,IAAKC,IAAUT,UAAU,YAAYU,IAAI,SAD1C,aAVaP,sCCmKVQ,cA/Jd,SAAAA,EAAYvB,GAAO,IAAAwB,EAAAvB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmB,IACZtB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqB,GAAAhB,KAAAH,KAAMJ,KACDQ,OAALgB,EAAA,CACCC,eAAe,sBAClBC,iBAAkBzB,EAAKD,MAAM2B,iBAF3BzB,OAAA0B,EAAA,EAAA1B,CAAAsB,EAAA,iBAGc,eAHdtB,OAAA0B,EAAA,EAAA1B,CAAAsB,EAAA,eAKW,GALXA,GASHvB,EAAK4B,uBAAyB5B,EAAK4B,uBAAuBC,KAA5B5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAC9BA,EAAKb,2BAA6Ba,EAAKb,2BAA2B0C,KAAhC5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAC/BA,EAAK7B,cAAgBA,IAAc0D,KAAd5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAbTA,wFAsBfvB,IAAE,cAAcoB,IAAI,UAAW,KAC/BpB,IAAE,gBAAgBsD,OAGrB,IAEIC,EAAU,GAIbA,EADGxC,OAAOyC,SAASC,KAAKC,MAAM,aALZ,+GACK,sDAWrB1D,IAAE2D,KAAK,CACAC,IAAKL,EACLM,KAAM,MACfC,SAAU,OACVC,aAAa,EACJC,KACT,CACIC,aAAcvC,KAAKJ,MAAM4C,OAAOC,QAE3BC,QAAS,SAASJ,GACnBA,EAAK7B,QAERT,KAAKb,SAAS,CAACkC,eAAiBiB,EAAK7B,SAElB,aAAf6B,EAAK7B,OACLT,KAAKb,SAAS,CAACwD,aAAc,IAEhC3C,KAAKb,SAAS,CAACwD,aAAc,KAK9B3C,KAAKb,SAAS,CAACkC,eAAiB,6CAGjCrB,KAAKhB,8BAEE0C,KAAK1B,MACZ4C,MAAO,SAAUA,GACJC,IAAK,SAAU,4BAA6B,SAExD7C,KAAKb,SAAS,CAACkC,eAAiB,yBAChCrB,KAAKhB,8BAEK0C,KAAK1B,6DAUf1B,IAAE,gBAAgBY,QAAQ,KAE7Bc,KAAKJ,MAAMkD,gCAA+B,GAItC9C,KAAKhC,cAAc,eAGvByB,WAAW,WACPnB,IAAE,cAAcoB,IAAI,UAAW,MAChC,sCAQA,IAAIqD,EAAS/C,KAAKJ,MAAM4C,OACD1C,OAAOkD,KAAKD,GAAQE,IAAI,SAASC,EAAKC,GACzD,OAAO9C,EAAAC,EAAAC,cAAA,QAAM2C,IAAKC,GAAX,KAAqBD,EAArB,OAA8BH,EAAOG,GAArC,gBAIX,OACC7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBADd,KAEEH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,sBAAwBR,KAAKJ,MAAMwD,gBAAkB,YAAa,cAAlF,QASH/C,EAAAC,EAAAC,cAAA,OAAKC,UAAW,uCACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACPH,EAAAC,EAAAC,cAAA,2CACVF,EAAAC,EAAAC,cAAA,OAAKS,IAAKqC,IAAW7C,UAAU,sBAAsBU,IAAI,UAIvDb,EAAAC,EAAAC,cAAA,OAAKC,UAAW,uCAAyCR,KAAKJ,MAAM4C,OAAOE,QAAS,YAAa,kBAAjG,IACErC,EAAAC,EAAAC,cAAA,SAAIP,KAAKJ,MAAM4C,OAAOc,eACzBjD,EAAAC,EAAAC,cAAA,0BAAkBP,KAAKJ,MAAM4C,OAAOE,QAAQa,YAF3C,IAGDlD,EAAAC,EAAAC,cAAA,wBAAgBP,KAAKJ,MAAM4C,OAAOgB,cAHjC,KAIJnD,EAAAC,EAAAC,cAAA,mBAAWP,KAAKJ,MAAM4C,OAAOiB,eAA7B,UACGpD,EAAAC,EAAAC,cAAA,0BAAkBP,KAAKJ,MAAM2B,gBAAgBgC,WAA7C,OArBE,IA0BLlD,EAAAC,EAAAC,cAAA,OAAKC,UAAW,kCAAoCR,KAAKJ,MAAM4C,OAAOE,QAAS,wBAAyB,0BACtGrC,EAAAC,EAAAC,cAAA,SAAO4B,KAAK,SAAS3B,UAAU,4BAA4BkD,MAAM,iBAAkBC,QAAS3D,KAAKyB,0BAKnGpB,EAAAC,EAAAC,cAAA,OAAKqD,GAAG,YAAYpD,UAAW,yDAA4DR,KAAKJ,MAAM4C,OAAOE,SAAW1C,KAAKJ,MAAMiE,+BAAiC,YAAa,cAAgB7D,KAAKI,MAAMuC,YAAa,YAAa,gBACvOtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACJH,EAAAC,EAAAC,cAAA,2CACVF,EAAAC,EAAAC,cAAA,OAAKS,IAAKC,IAAUT,UAAU,kBAAkBU,IAAI,UAIrDb,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAChBH,EAAAC,EAAAC,cAAA,SAAIP,KAAKI,MAAMiB,0BAvJgBV,aC8UrBmD,cAlUd,SAAAA,EAAYlE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8D,IACZjE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgE,GAAA3D,KAAAH,KAAMJ,KAEJmE,aAAe,uBACpBlE,EAAKmE,gBAAkB,0BAEvBnE,EAAKoE,WAAa,IAClBpE,EAAKqE,YAAc,GAGhBrE,EAAKO,MAAQ,CACf+D,iBAAmB,OACnBC,aAAe,GACfC,wBAA0B,uBAC1BC,UAAU,EACVC,gBAAkB1E,EAAKoE,WAEvBO,WAAY3E,EAAKD,MAAM6E,eACvBC,mBAAqB,CAAChC,SAAQ,EAAOD,OAAO,GAAIgB,eAAgB,GAAIH,cAAc,GAAIE,aAAc,IACpGpE,sBAAuB,EACvBuF,4BAA4B,GAI7B9E,EAAK+E,sCAAwC/E,EAAK+E,sCAAsClD,KAA3C5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAC7CA,EAAKgF,aAAehF,EAAKgF,aAAanD,KAAlB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KACpBA,EAAKiF,0BAA4BjF,EAAKiF,0BAA0BpD,KAA/B5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KACjCA,EAAKkF,uBAAyBlF,EAAKkF,uBAAuBrD,KAA5B5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAC3BA,EAAKmF,YAAcnF,EAAKmF,YAAYtD,KAAjB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KACtBA,EAAKoF,WC5CH,SAAqBC,EAAOtB,EAAIuB,EAAQC,EAAmBC,EAAYC,EAAgBC,GAG1F,GAAa,KAATL,EAsBL,OAHIlF,KAAKb,SAAS,CAACkF,wBAAyB,MAC3CrE,KAAKb,SAAS,CAACmF,UAAW,IACrBhG,IAAE,IAAM8G,GAAkBI,KAAK,OAC9B,EApBQN,EAGFlD,MAAMmD,IAChBnF,KAAKb,SAAS,CAACkF,wBAAyB,WAAaiB,EAAiB,WACzEtF,KAAKb,SAAS,CAACmF,UAAW,IACjBhG,IAAE,IAAM8G,GAAkBI,KAAK,QAGrCxF,KAAKb,SAAS,CAACkF,wBAAyBgB,IAC3CrF,KAAKb,SAAS,CAACmF,UAAW,IAGjBhG,IAAE,IAAM8G,GAAkBI,KAAY,cD0BhB9D,KAAX5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAClBA,EAAK4F,qBEtCH,WACH5C,IAAK,mCAAoC,MAAO,WAChD,IAYI5D,EAAOe,KAYd1B,IAAE,oBAAoBoH,aAAa,CAC5BC,UAAW,EACXC,OA1BqB,CAC3B,CAACC,MAAO,OAAQnC,MAAQ,SACxB,CAACmC,MAAO,MAAQnC,MAAQ,WACxB,CAACmC,MAAO,MAAQnC,MAAQ,WACxB,CAACmC,MAAO,OAAQnC,MAAQ,UAClB,CAACmC,MAAO,MAAQnC,MAAQ,UACxB,CAACmC,MAAO,MAAQnC,MAAQ,UAC9B,CAACmC,MAAO,MAAQnC,MAAQ,WACrB,CAACmC,MAAO,MAAQnC,MAAQ,mBAmB3BoC,OAAQ,SAAUC,EAAOC,IAZ1B,SAAsCD,EAAOC,EAAI/G,GAE1CA,EAAKE,SAAS,CAACgF,iBAAkB6B,EAAGC,KAAKJ,QAC5C5G,EAAK6F,0BAA0BiB,GAC5BA,EAAMG,iBASFC,CAA6BJ,EAAOC,EAAI/G,MAIlDyG,aAAc,YAAaU,YAAc,SAAUC,EAAIJ,GACjD,OAAO3H,IAAE,QACRgI,OAAO,QAAUL,EAAKJ,MAAQ,OAASI,EAAKvC,MAAQ,UACpD6C,SAASF,KFCoC3E,KAArB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAC5BA,EAAK2G,mBAAqB3G,EAAK2G,mBAAmB9E,KAAxB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAC1BA,EAAK4G,oBAAsB5G,EAAK4G,oBAAoB/E,KAAzB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAC3BA,EAAK6G,eNzCH,WAENpI,IAAE,eAAekB,KAAM,YAAY,GAEnCQ,KAAKb,SAAS,CAACwF,4BAA4B,IAC3CrG,IAAE,kBAAkBoB,IAAI,UAAW,KAGnC,IAAIiH,EAAS,CACTC,YAAoB5G,KAAKI,MAAM+D,iBAClC0C,UAAoB7G,KAAKI,MAAMgE,aAC/B0C,mBAAoB9G,KAAKJ,MAAM6E,gBAIhCnG,IAAE,gBAAgBsD,OAGlB,IAEIC,EAAU,GAIbA,EADExC,OAAOyC,SAASC,KAAKC,MAAM,aALX,kGACQ,yCAU3B1D,IAAE2D,KAAK,CACAC,IAAKL,EACLM,KAAM,OACTC,SAAU,OACbC,aAAa,EACPC,KAAMqE,EACNjE,QAAS,SAASJ,GAEjBtC,KAAKJ,MAAMmH,0BAA0B,8BAAsCzE,EAAK0E,OAAS,KAAQC,KAAKC,UAAU5E,IAC/GA,EAAK6E,kBAERnH,KAAKJ,MAAMmH,0BAA0B,oBAAsBzE,EAAK6E,iBAAiBzE,UAE5C,IAAlCJ,EAAK6E,iBAAiBzE,QAExB1C,KAAKb,SAAS,SAAAiI,GAAS,MAAK,CACZ1C,mBAAmB5E,OAAAuH,EAAA,EAAAvH,CAAA,GACZsH,EAAU1C,mBADC,CAEdhC,QAASJ,EAAK6E,iBAAiBzE,QAASD,OAAOH,EAAK6E,iBAAiB1E,OACvFgB,eAAenB,EAAK6E,iBAAiB1D,eAAgBH,cAAc,wBACjDE,aAAclB,EAAK6E,iBAAiBG,YAMxDtH,KAAKb,SAAS,SAAAiI,GAAS,MAAK,CACZ1C,mBAAmB5E,OAAAuH,EAAA,EAAAvH,CAAA,GACZsH,EAAU1C,mBADC,CAEdhC,QAASJ,EAAK6E,iBAAiBzE,QAASD,OAAO,GACjEgB,eAAe,GAAIH,cAAc,6BACfE,aAAclB,EAAK6E,iBAAiBvE,YAOtD5C,KAAKb,SAAS,SAAAiI,GAAS,MAAK,CAClB1C,mBAAmB5E,OAAAuH,EAAA,EAAAvH,CAAA,GACZsH,EAAU1C,mBADC,CAEdhC,SAAS,EAAOD,OAAO,GAAIgB,eAAe,GACzDH,cAAc,2BAA4BE,aAAclB,EAAKgF,YAK7DtI,EAA2BgB,OAE1B0B,KAAK1B,MAEb4C,MAAO,SAAUA,GACPC,IAAK,SAAU,sBAAuB,SAE/C7C,KAAKJ,MAAMmH,0BAA0B,oBAClCzI,IAAE,gBAAgBY,QAAQ,KAG1Bc,KAAKb,SAAS,SAAAiI,GAAS,MAAK,CAClB1C,mBAAmB5E,OAAAuH,EAAA,EAAAvH,CAAA,GACZsH,EAAU1C,mBADC,CAEdhC,SAAS,EAAOD,OAAO,GAAIgB,eAAe,GAAIH,cAAc,2BAI7EtE,EAA2BgB,OAEpB0B,KAAK1B,SMvD2B0B,KAAf5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KACnBA,EAAK7B,cAAgBA,IAAc0D,KAAd5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAlCTA,mFAuCfG,KAAKyF,4HAOyB8B,GACjCvH,KAAKb,SAAS,CAACwF,2BAA2B4C,oEAWnCjJ,IAAE,eAAekJ,GAAG,cACjB3E,IAAK,QAAS,4CAMM,IAAxB7C,KAAK6E,iBAa0B,IAAxB7E,KAAK6E,gBAER7E,KAAK0G,wDAcf,GAAuC,KAAnC1G,KAAKI,MAAMgE,aAAaqD,OAElB,OADN5E,IAAK,QAAS,eAAgB,UACjB,EAGd,GAA0C,KAAtC7C,KAAKI,MAAM+D,iBAAiBsD,OAEzB,OADN5E,IAAK,QAAS,kBAAmB,UACpB,EAId,GAAI7C,KAAKI,MAAM+D,iBAAiBnC,MAAM,UAClC,IAAI0F,EAAU1H,KAAKgE,qBAElB0D,EAAU1H,KAAK+D,aAIvB,QAAK/D,KAAKI,MAAM+D,iBAAiBnC,MAAM0F,KAC7B7E,IAAK,QAAS,yBAA0B,YACjC,qDAiBYkD,GAAO,IAAA4B,EAAA3H,KAC7B4H,EAAa7B,EAAM8B,OAAOnE,MAE9B,GAAIkE,EAAW5F,MAAM,QACjB,IAAI0F,EAAU1H,KAAKgE,gBAClB8D,EAAe,wBACfC,EAAY,UAEZL,EAAU1H,KAAK+D,aACf+D,EAAe,wBACfC,EAAY,KAGd/H,KAAKiF,WAAW2C,EAAY5H,KAAK4D,GAAI8D,EAAS,aAAcI,EAAcC,EAAWhC,GAGrF/F,KAAKb,SAAS,CAACgF,iBAAkB4B,EAAM8B,OAAOnE,OAC9C,WAECiE,EAAK/H,MAAMoI,uBAAuBL,EAAKvH,MAAM+D,mEAa1B4B,GAAO,IAC1BlF,EAD0BoH,EAAAjI,KAI3BA,KAAKwG,qBACPxG,KAAKb,SAAS,CAACoF,gBAAiBvE,KAAKkE,cAIxClE,KAAKb,SAAS,CAACoF,gBAAiBvE,KAAKiE,aAEtB8B,EAAM8B,OAAOnE,MAGhBwE,QAAUlI,KAAKI,MAAMmE,iBAG9BjG,IAAE,kBAAkB6J,aAAaC,OAAO,KAAKlJ,QAAQ,KACrD2B,EAAUkF,EAAM8B,OAAOnE,MAAM2E,UAAU,EAAGrI,KAAKI,MAAMmE,kBAItD1D,EAAUkF,EAAM8B,OAAOnE,MAIpB1D,KAAKb,SAAS,CAACiF,aAAcvD,GAC1B,WAEFoH,EAAKrI,MAAM0I,mBAAmBL,EAAK7H,MAAMgE,4DAa1BmB,GAAE,IACjB1E,EADiB0H,EAAAvI,KAEjBwI,EAAajD,EAAEkD,cAAcC,QAAQ,QACzCnD,EAAEW,iBAGFlG,KAAKwG,sBAAwBgC,EAAWxG,MAAM,4CAChDhC,KAAKb,SAAS,CAACoF,gBAAiBvE,KAAKkE,cAIrClE,KAAKb,SAAS,CAACoF,gBAAiBvE,KAAKiE,aAIhCuE,EAAWN,QAAUlI,KAAKI,MAAMmE,iBAGlCjG,IAAE,kBAAkB6J,aAAaC,OAAO,KAAKlJ,QAAQ,KACrD2B,EAAU2H,EAAWH,UAAU,EAAGrI,KAAKI,MAAMmE,kBAG9C1D,EAAU2H,EAIPxI,KAAKb,SAAS,CAACiF,aAAcvD,GAC1B,WAEF0H,EAAK3I,MAAM0I,mBAAmBC,EAAKnI,MAAMgE,sDAa7CpE,KAAKb,SAAS,CAACgF,iBAAkB,KACjCnE,KAAKb,SAAS,CAACiF,aAAc,KAC7BpE,KAAKb,SAAS,CAACkF,wBAAyB,KACxCrE,KAAKb,SAAS,CAACC,sBAAsB,IAGrCY,KAAKb,SAAS,SAAAiI,GAAS,MAAK,CACrB1C,mBAAmB5E,OAAAuH,EAAA,EAAAvH,CAAA,GACZsH,EAAU1C,mBADC,CAEdhC,SAAS,EAAOD,OAAO,GAChCgB,eAAe,GAAIH,cAAc,GAAGE,aAAc,qDAgBpD,QAAIlF,IAAE,iBAAiBqK,MAAM3G,MADb,6EAYhB,IAAIc,EAAkC9C,KAAK8C,+BACxC,OACDzC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAChBH,EAAAC,EAAAC,cAACqI,EAAD,CAA2BnI,OAAQT,KAAKI,MAAMkE,SAAU5D,yBAA0BV,KAAKI,MAAMiE,0BAD5F,SAGJhE,EAAAC,EAAAC,cAAA,SAAO4B,KAAK,OAAOyB,GAAG,kBAAmBiF,YAAY,cAAcrI,UAAU,qCAAqCkD,MAAO1D,KAAKI,MAAM+D,iBAAkB2E,SAAU9I,KAAK8E,6BAGpKzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACJH,EAAAC,EAAAC,cAAA,YAAUqD,GAAG,eAAemF,KAAK,IAAIC,KAAK,KAAKH,YAAY,cAAcrI,UAAU,qCAAqCkD,MAAO1D,KAAKI,MAAMgE,aAAe0E,SAAU9I,KAAK+E,uBAAwBkE,QAASjJ,KAAKyG,uBAGzNpG,EAAAC,EAAAC,cAAC2I,EAAD,CAAcrI,QAAUb,KAAKI,MAAMmE,gBAAkBvE,KAAKI,MAAMgE,aAAa8D,SAXzE,IAaJ7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACJH,EAAAC,EAAAC,cAAA,SAAO4B,KAAK,SAAS3B,UAAU,4BAA4BkD,MAAM,OAAOE,GAAG,aAAaD,QAAS3D,KAAK4E,wCADjH,IAEEvE,EAAAC,EAAAC,cAAA,SAAO4B,KAAK,SAAS3B,UAAU,4BAA4BkD,MAAM,QAAQE,GAAG,GAAGD,QAAS3D,KAAKgF,gBAM3F3E,EAAAC,EAAAC,cAAC4I,EAAD,CAAuB3G,OAAQxC,KAAKI,MAAMsE,mBAChBnD,gBAAiBvB,KAAKJ,MAAM6E,eACrCrB,gBAAiBpD,KAAKI,MAAMhB,qBAAsByE,+BAAgC7D,KAAKI,MAAMuE,2BAC7F7B,+BAAkCA,EAA+BpB,KAAK1B,QAE5FK,EAAAC,EAAAC,cAAC6I,EAAD,MACG/I,EAAAC,EAAAC,cAAC8I,EAAD,MA7BA,aA/RiB1I,8BGUT2I,qBArBd,SAAAA,EAAY1J,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsJ,IAChBzJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwJ,GAAAnJ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFGP,wEAShB,OACCQ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAEZH,EAAAC,EAAAC,cAAA,QAAMqD,GAAG,iBACRvD,EAAAC,EAAAC,cAAA,OAAKS,IAAKuI,IAAW/I,UAAU,YAAYU,IAAI,SADhD,cAboBP,cCkDX6I,qBApDd,SAAAA,EAAY5J,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwJ,IACZ3J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0J,GAAArJ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFDP,wEASjB,IAAM4J,EAAOzJ,KAAKJ,MAAM8J,oBAAoBzG,IAAI,SAASgD,EAAM0D,GAC5D,OAAOtJ,EAAAC,EAAAC,cAAA,MAAI2C,IAAKyG,GAAI1D,KAGtB,OACA5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,2GAIHH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,gPAIGH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,kDAIFH,EAAAC,EAAAC,cAAA,SACGP,KAAKJ,MAAMgK,uBADd,KAIDvJ,EAAAC,EAAAC,cAAA,SACKP,KAAKJ,MAAMiK,eADhB,KAIAxJ,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,kBADF,IACgBP,KAAKJ,MAAMkK,sBAAsBvG,WADjD,KAKAlD,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,sBADJ,IACsBkJ,EADtB,cA1C2B9I,cC+BlBoJ,cA7Bd,SAAAA,EAAYnK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+J,IACZlK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiK,GAAA5J,KAAAH,KAAMJ,KACDQ,MAAQ,GAFDP,wEAQd,OACJQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,SAAO4B,KAAK,SAAS3B,UAAU,2BAA2BwJ,cAAY,WAAWjI,KAAK,mBAAmBkI,KAAK,SAASC,gBAAc,QAAQC,gBAAc,kBAAkBzG,MAAM,mBAEnLrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCAAyCoD,GAAG,mBAC7DvD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,qFADE,QAKRH,EAAAC,EAAAC,cAAC6J,EAAD,CAAmBP,eAAgB7J,KAAKJ,MAAMyK,YAAcT,uBAAwB5J,KAAKJ,MAAM0K,gBAAiBR,sBAAuB9J,KAAKJ,MAAM6E,eAAiBiF,oBAAqB1J,KAAKJ,MAAM2K,eAL3L,8CAdc5J,uBCqDb6J,cApDd,SAAAA,EAAY5K,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwK,IACZ3K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0K,GAAArK,KAAAH,KAAMJ,KACDQ,MAAQ,CACfqK,gBAAkB,EAClBjG,YAAa,EACbkG,eAAiB,aAIlB7K,EAAK8K,oBAAsB9K,EAAK8K,oBAAoBjJ,KAAzB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAC3BA,EAAK+K,oBCVH,WAEN,IAAIC,EAAU,CACV,6GACH,mHAGA,mEAEA,uGACA,2FACA,6GACA,2GACA,6GACA,6GACA,6GACA,6GACA,6GAEA,2GAEA,2GACA,4FACA,6GACA,2GACA,8EACA,6GACA,2GACA,2GACA,2GACA,iIAEM,2GACA,6GACA,2GACN,2GACA,6GACA,2GAEA,6GACA,+GACA,wIACM,6GAGN,gFACA,6GACA,2GAIA,2GACA,6GACA,6GACA,6GACA,6GACA,oDAEA,2GACA,wFACA,+FAEA,oJAEA,6GACA,2FACA,2GACA,0HACA,6GACA,2GAEA,sFACA,iFACA,2GACA,kGACA,mFACA,mFACA,mFACA,mFACA,2GACA,2GACA,6GACA,2GAEA,6GACA,6GACA,8EACA,2GACA,6GACA,oGACA,2GACA,IAGiB7K,KAAKI,MAAMqK,gBAEb,IAAOI,EAAQ3C,OAC3BlI,KAAKb,SAAS,CAAEsL,gBAAiB,IAEpCzK,KAAKb,SAAS,SAAAiI,GAAS,MAAK,CAAEqD,gBAAiBrD,EAAUqD,gBAAkB,KAKzE,IAFA,IAAIzB,EAAO8B,SAASC,uBAAuB,qBAElCpB,EAAI,EAAGA,EAAIX,EAAKd,OAAQyB,IAChC,IACOX,EAAKW,GAAGqB,MAAMC,gBAAkB,OAASJ,EAAQ7K,KAAKI,MAAMqK,iBAAmB,IACvF,MAAMS,GACJC,MAAMD,EAAIE,WDlGoC1J,KAApB5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAC3BA,EAAKwL,uBAAyBxL,EAAKwL,uBAAuB3J,KAA5B5B,OAAA6B,EAAA,EAAA7B,QAAA6B,EAAA,EAAA7B,CAAAD,KAXfA,qFAgBfG,KAAK4K,uEAIkB,IAAAjD,EAAA3H,KAEvBA,KAAKb,SAAS,SAAAiI,GAAS,MAAK,CACrB5C,YAAa4C,EAAU5C,aAG5B,WAGEmD,EAAK/H,MAAM0L,2BAA2B3D,EAAKvH,MAAMoE,aAGpB,IAA1BmD,EAAKvH,MAAMoE,WACbmD,EAAKxI,SAAS,CAACuL,eAAgB,cAElC/C,EAAKxI,SAAS,CAACuL,eAAgB,iDAO9B,OACCrK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACVH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yCAAyCmD,QAAS3D,KAAK2K,qBAAzE,SAAqGtK,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAExHH,EAAAC,EAAAC,cAAA,UAAQC,UAAWR,KAAKI,MAAMoE,WAAa,mDAAqD,kDAAmDb,QAAS3D,KAAKqL,wBAAjK,IAA2LrL,KAAKI,MAAMsK,eAAtM,IAAuNrK,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBA/C5MG,aEkFjB4K,cArEX,SAAAA,EAAY3L,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuL,IACf1L,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyL,GAAApL,KAAAH,KAAMJ,KAEPQ,MAAQ,CACZoL,YAAc,4DACd3K,QAAU,uDACP2D,YAAa,EAChBiH,SAAS,CAAC,SAIL5L,EAAK6L,UAAY,GAXF7L,sFAeI8L,GAChB3L,KAAKb,SAAS,CAACqM,YAAYG,+CAIfC,GACf5L,KAAKb,SAAS,CAAC0B,QAAQ+K,uDAIAC,GACvB7L,KAAKb,SAAS,CAACqF,WAAWqH,sDAIPC,GACzB9L,KAAKb,SAAS,SAAAiI,GAAS,MAAK,CAClBqE,SAAS3L,OAAAiM,EAAA,EAAAjM,CAAKsH,EAAUqE,UAAhBO,OAAA,CAA0BF,wCAM3C,IAAI9D,EAA8BhI,KAAKgI,uBACnCM,EAA8BtI,KAAKsI,mBACnCgD,EAA8BtL,KAAKsL,2BACnCvE,EAA8B/G,KAAK+G,0BAEtC,OAEC1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,IACCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,IAAqCR,KAAKJ,MAAMqM,KAAhD,QAAwF5L,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAC7GH,EAAAC,EAAAC,cAAA,OAAKS,IAAKkL,IAAO1L,UAAU,oBAAoBU,IAAI,UAGvDb,EAAAC,EAAAC,cAAC4L,EAAD,CAAW1H,eAAgBzE,KAAKI,MAAMoE,WAAawD,uBAA0BA,EAAuBtG,KAAK1B,MAAQsI,mBAAsBA,EAAmB5G,KAAK1B,MAAO+G,0BAA6BA,EAA0BrF,KAAK1B,SAGjOK,EAAAC,EAAAC,cAAC6L,EAAD,CAAe9B,gBAAiBtK,KAAKI,MAAMoL,YAAcnB,YAAarK,KAAKI,MAAMS,QAAS4D,eAAgBzE,KAAKI,MAAMoE,WAAY+F,aAAcvK,KAAKI,MAAMqL,WATpJ,MAcVpL,EAAAC,EAAAC,cAAC8L,EAAD,MAhBE,IAiBFhM,EAAAC,EAAAC,cAAC+L,EAAD,CAAmBhB,2BAA8BA,EAA2B5J,KAAK1B,QAjB/E,YA9CaW,aCJE4L,QACW,cAA7BlN,OAAOyC,SAAS0K,UAEe,UAA7BnN,OAAOyC,SAAS0K,UAEhBnN,OAAOyC,SAAS0K,SAASxK,MACvB,2DCZNyK,IAASC,OACLrM,EAAAC,EAAAC,cAACoM,EAAD,CAAMV,KAAK,qBACXnB,SAAS8B,eAAe,SDyHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.eb7b2fd6.chunk.js","sourcesContent":["//USED in <TextArea/> as injected function \r\nimport $ from 'jquery';\r\n\r\n//Function to scroll\r\nexport function scrollResults (divName, parent){  //arg(DivID, levels to go up from DivID)\r\n\tif (typeof(parent)==='undefined') {\r\n        $('html, body').animate({\r\n            scrollTop: $(divName).offset().top\r\n            //scrollTop: $('.your-class').offset().top\r\n        }, 'slow'); \r\n    } else {\r\n\t    //if 2nd argument is provided\r\n\t\tvar stringX = \"$(divName)\" + parent + \"offset().top\";  //i.e constructs -> $(\"#divID\").parent().parent().offset().top\r\n\t\t$('html, body').animate({\r\n            scrollTop: eval(stringX)  \r\n        }, 'slow'); \r\n\t}\r\n\t\r\n}","module.exports = __webpack_public_path__ + \"static/media/loaddd.9209e391.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/loaddd_PREV.584b607f.gif\";","module.exports = __webpack_public_path__ + \"static/media/error.52edd8e9.gif\";","//USED in <TextArea/> as injected function \r\nimport $ from 'jquery';\r\nimport swal from 'sweetalert';\r\n\r\n /*\r\n |--------------------------------------------------------------------------\r\n | Function that sends Sms via ajax\r\n |--------------------------------------------------------------------------\r\n |\r\n |\r\n */\r\nexport function sendSmsMessage (){\r\n    //disable send button\r\n\t$(\"#sendButton\").prop( \"disabled\", true );\t\r\n\t//update this state in case in was set TRUE prev (to decide if to show Div with \"Delivered/NotDelivered\" Status). Value is used in <ResultFromTextbeltApi/>. Updated/uplifted from there too.\r\n\tthis.setState({ifUserClickedCheckDelivery: false});\r\n\t$(\".child-div-sms\").css('opacity', '1'); //shows yellow opacity div-> react imitation of {$(\".del-st\").stop().fadeOut(\"slow\",function(){ /*$(this).html(finalText) */}).fadeIn(3000); \r\n\t   \r\n\t//data to send via ajax\r\n\tvar myData = { \r\n\t    serverPhone:        this.state.phoneNumberChild,  //number\r\n\t\tserverSms:          this.state.smsTextChild,      //sms text\r\n\t\tserverIfTestStatus: this.props.ifTestModeData     //test/prod flag (set in <TopSectionButtons/>, uplifted to <App/> and passed here)\r\n\t};\r\n\t   \r\n\t//------ Variant_2 (ajax withcontentType/dataType) => Works!!!! (The most correct)!!!!!!!!!!!!!!!!\r\n\t$(\".ajax-loader\").show(); //show loader\r\n\t\t  \r\n    //decide which url to use, switching ajax url when running on localHost or real Hosting\r\n\tvar localhostURL = 'http://localhost/' + process.env.REACT_APP_APPLICATION_DIRECTORY + '/Server_Side/ajax_script/sendSms.php';\r\n    var realServerProdURL = '../Server_Side/ajax_script/sendSms.php'; \r\n\tvar ajaxURL = '';\r\n\t\t  \r\n\t//if finds \"localhost\" in current url\r\n\tif(window.location.href.match(/localhost/)){  \r\n\t\tajaxURL = localhostURL; \r\n\t} else {\r\n\t\tajaxURL = realServerProdURL;\r\n\t}\r\n          \r\n\t$.ajax({ \r\n        url: ajaxURL, \r\n        type: 'POST',\r\n\t    dataType: 'JSON', \r\n\t\tcrossDomain: true,\r\n        data: myData,\r\n        success: function(data) { \r\n\t\t    //uplift to TechInfo/use it instead of alert\r\n\t        this.props.liftTechAlertsInfoHandler(\"OK -> Variant_2\\n\" +  \"Variant_2 \" + data.cellar + \"\\n\" +  JSON.stringify(data));\r\n\t\t    if (data.textBeltResponse) { //textBeltResponse array is set in Classes/SendSms.php  \r\n\t\t\t    //uplift to TechInfo/use it instead of alert\r\n\t\t\t    this.props.liftTechAlertsInfoHandler(\"textBeltResponse \" + data.textBeltResponse.success);\r\n            \r\n\t\t\t    if(data.textBeltResponse.success === true) { //if sent\r\n\t\t\t\t    //update this.state.answerFromTextbelt (Variant for Object)\r\n\t\t\t\t    this.setState(prevState => ({\r\n                        answerFromTextbelt: {    // object that we want to update\r\n                            ...prevState.answerFromTextbelt,    // keep all other key-value pairs\r\n                            success: data.textBeltResponse.success, textId:data.textBeltResponse.textId,  // update the Object with key:value\r\n\t\t\t\t\t\t    quotaRemaining:data.textBeltResponse.quotaRemaining, clientMessage:'Sms sent successfully',\r\n                            errorFromApi: data.textBeltResponse.errorX\t\t\t\t\t\t\r\n                        }\r\n                    }));\r\n\t\t\t\t\t  \r\n\t\t\t    } else {\r\n\t\t\t        //update this.state.answerFromTextbelt (Variant for Object)\r\n\t\t\t\t    this.setState(prevState => ({\r\n                        answerFromTextbelt: {    // object that we want to update\r\n                            ...prevState.answerFromTextbelt,    // keep all other key-value pairs\r\n                            success: data.textBeltResponse.success, textId:'',  // update the Object with key:value\r\n\t\t\t\t\t\t    quotaRemaining:'', clientMessage:'Sms  not sent successfully',\r\n                            errorFromApi: data.textBeltResponse.error\t\t\t\t\t\t\r\n                        }\r\n                    }));\t\t  \r\n\t\t\t    }\t  \r\n\t\t\t     \r\n\t\t    } else { //if NO data.textBeltResponse, i.e no response from TextBelt Api\r\n\t\t        //update this.state.answerFromTextbelt (Variant for Object)\r\n\t\t        this.setState(prevState => ({\r\n                    answerFromTextbelt: {    // object that we want to update\r\n                        ...prevState.answerFromTextbelt,    // keep all other key-value pairs\r\n                        success: false, textId:'', quotaRemaining:'', // update the Object with key:value\r\n\t\t\t\t\t    clientMessage:'Sms message was not send', errorFromApi: data.errorX  \r\n                    }\r\n                }));\r\n\t\t    }\r\n\t\t\t\r\n\t        runSomeActionsOnAjaxResult(this);\r\n\t\t\t \r\n        }.bind(this),  //end success //{.bind(this)} is a must otherwise setState won't work in success\r\n        \r\n\t\terror: function (error) {\r\n            swal(\"Error!\", \"Sending sms failed!\", \"error\");\r\n\t\t    //uplift to TechInfo/use it instead of alert\r\n\t\t\tthis.props.liftTechAlertsInfoHandler(\"Variant_2 failed\");\r\n\t\t    $(\".ajax-loader\").fadeOut(5000); //hide loader\r\n\t\t\t\t\r\n\t\t    //update this.state.answerFromTextbelt (Variant for Object)\r\n\t\t    this.setState(prevState => ({\r\n                answerFromTextbelt: {    // object that we want to update\r\n                    ...prevState.answerFromTextbelt,    // keep all other key-value pairs\r\n                    success: false, textId:'', quotaRemaining:'', clientMessage:'Sms message crashed'  // update the Object with key:value\r\n                }\r\n            }));\r\n\t\t\t\t\r\n\t\t\trunSomeActionsOnAjaxResult(this);\r\n\t\t\t \r\n        }.bind(this) //{.bind(this)} is a must otherwise setState won't work in success\t\r\n    });\r\n\t\t\r\n}\r\n\r\n\r\n\r\n /*\r\n |--------------------------------------------------------------------------\r\n | run some action both on ajax success/fail\r\n |--------------------------------------------------------------------------\r\n |\r\n |\r\n */\r\nfunction runSomeActionsOnAjaxResult(that){\r\n\t$(\".ajax-loader\").fadeOut(5000); //hide loader\r\n\t\t\t  \r\n\t//set true to show Div with result in <ResultFromTextbeltApi/>\r\n\tthat.setState({ifUserClickedSendSms: true});\r\n\t\t\t \r\n\t//Scroll to results in Mobile only\r\n\tif(window.screen.width <= 640) { \r\n\t    that.scrollResults(\".resultScroll\"); //scroll the page down to weather results\r\n\t}\r\n\t\t\t \r\n\t//enable send button\r\n\t$(\"#sendButton\").prop( \"disabled\", false );\r\n\t\t\t \r\n\t//shows yellow opacity div-> react imitation of {$(\".del-st\").stop().fadeOut(\"slow\",function(){ /*$(this).html(finalText) */}).fadeIn(3000);\r\n\tsetTimeout(function() {\r\n\t    $(\".child-div-sms\").css('opacity', '0'); \r\n\t}, 3000);\r\n}\r\n   \r\n   ","import React, { Component } from 'react';\r\n\r\n//Message if RegExp founds cell number OK/or NOT*/}\r\nclass DisplayPhoneRegExpMessage extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\t\r\n        };\r\n    }\r\n\r\n    //RENDER -----------------------\r\n    render() {\r\n        return (\r\n\t\t    <div className=\"col-sm-12 col-xs-12 err-message-div shadow-xx\"> \t \r\n              <span className={this.props.status ? 'err-mess-wrong phone-error' : 'err-mess-ok phone-error'} > {this.props.phoneNumberErrorMessageX} </span>  {/* Message if RegExp founds cell number OK/or NOT*/}\r\n\t\t    </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DisplayPhoneRegExpMessage;","import React, { Component } from 'react';\r\n\r\nclass CountSmsText extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\t\r\n        };\r\n    }\r\n  \r\n    //RENDER ------------------------------------------------\r\n    render() {\r\n        return (\r\n\t\t    <div className=\"col-sm-12 col-xs-12\"> \t \r\n              <div className=\"\">\r\n\t\t        {/* Count: {160 - (this.props.smsText.length)}*/}\r\n\t\t        <span className=\"text-shadow\"> Count: {this.props.smsText}</span>\r\n              </div>\r\n\t\t    </div>\r\n\t  \r\n        );\r\n    }\r\n}\r\n\r\nexport default CountSmsText;\r\n","import React, { Component } from 'react';\r\nimport '../../../css/FlashMessage.css';\r\n\r\nclass FlashMessage extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\t\r\n        };\r\n    }\r\n  \r\n    //RENDER ------------------------------------------------\r\n    render() {\r\n        return (\r\n\t\t    <div className=\"col-sm-12 col-xs-12 flash-message\"> \t\r\n\t\t      Left <br/> 0 chars\r\n\t\t    </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FlashMessage;\r\n","//Shows gif spinner loader, when user clicks \"Send sms\"\r\nimport React, { Component } from 'react';\r\nimport loaderX from '../../../images/loaddd.gif'\r\n\r\nclass AjaxLoader extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\t\r\n        };\r\n    }\r\n  \r\n    //RENDER ------------------------------------------------\r\n    render() {\r\n        return (\r\n            <div className='ajax-loader col-sm-12 col-xs-12'> \r\n\t\t      <img src={loaderX}  className=\"error-img\" alt=\"logo\" />  {/*  hidden by default */}\r\n\t\t    </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AjaxLoader;","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport swal from 'sweetalert';\r\nimport {scrollResults} from '../functions_injected/scrollResults'; //import my function to scroll\r\nimport loaderX from '../../../images/loaddd.gif'\r\nimport loaderX1 from '../../../images/loaddd_PREV.gif'\r\n\r\nclass ResultFromTextbeltApi extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t        deliveryStatus:'here will be status',\r\n\t\t    textIfTestModeOn: this.props.ifTestModeData2, // ? 'Test mode ON' : ' Test OFF, it\"s Prod',  //just for test, to show if it is TEST or Prod\r\n\t\t    deliveryStatus: 'some status',\r\n\t\t    //ifUserClickedCheckDelivery: this.props.ifUserClickedCheckDeliveryData, //false by default, //to detect if used clicked \"Check Delivery\" (to decide if to show Div with \"Delivered/NotDelivered\" Status). Value is used in <ResultFromTextbeltApi/>\r\n\t\t    deliveredOK: false, //deivery status for CSS styling (red or green bg)\r\n        };\r\n\t  \r\n\t    // This binding is necessary to make `this` work in the callback\r\n\t    this.checkSmsDeliveryStatus = this.checkSmsDeliveryStatus.bind(this); //runs checkong delivery\r\n\t    this.runSomeActionsOnAjaxResult = this.runSomeActionsOnAjaxResult.bind(this); //runs checkong delivery\r\n        this.scrollResults = scrollResults.bind(this); //for injected from files function\r\n    }\r\n  \r\n  \r\n    //function to run ajax to check delivery status\r\n    // **************************************************************************************\r\n    // **************************************************************************************\r\n    //                                                                                     **\r\n    checkSmsDeliveryStatus() {\r\n\t    $(\".child-div\").css('opacity', '1'); \r\n\t    $(\".ajax-loader\").show(); //show gif loader\r\n\t\t  \r\n\t\t//decide which url to use, switching ajax url when running on localHost or real Hosting\r\n\t\tvar localhostURL = 'http://localhost/' + process.env.REACT_APP_APPLICATION_DIRECTORY + '/Server_Side/ajax_script/getSmsDeliveryStatus.php';\r\n\t\tvar realServerProdURL = '../Server_Side/ajax_script/getSmsDeliveryStatus.php'; //can't use this on LocalHost as it'll redirect to http://localhost:3000/Server_Side/ajax_script/sendSms.php\r\n\t\tvar ajaxURL = '';\r\n\t\t  \r\n\t\t//if finds \"localhost\" in current url\r\n\t\tif (window.location.href.match(/localhost/)) {  \r\n\t\t\tajaxURL = localhostURL; \r\n\t\t} else {\r\n\t\t\tajaxURL = realServerProdURL;\r\n\t\t}\r\n\t\t  \r\n\t\t  \r\n\t    $.ajax({ \r\n            url: ajaxURL, \r\n            type: 'GET',\r\n\t\t\tdataType: 'JSON', \r\n\t\t\tcrossDomain: true,\r\n            data: \r\n\t\t\t{ \r\n\t\t\t    serverTextID: this.props.answer.textId \r\n\t\t\t},\r\n            success: function(data) {\r\n\t\t\t    if (data.status) { //textBeltResponse array is set in Classes/SendSms.php\r\n\t\t\t\t    //update this.state.deliveryStatus -> gets the relivery response status from Api\r\n\t\t\t\t    this.setState({deliveryStatus : data.status}); \r\n\t\t\t\t  \r\n\t\t\t\t    if (data.status == 'DELIVERED') {\r\n\t\t\t\t        this.setState({deliveredOK : true});  //for CSS styling \r\n\t\t\t\t    } else {\r\n\t\t\t\t\t    this.setState({deliveredOK : false});  //for CSS styling \r\n\t\t\t\t    }\r\n\t\t\t     \r\n\t\t\t    } else { //if NO data.textBeltResponse, i.e no response from TextBelt Api\r\n\t\t\t\t    //update this.state.deliveryStatus\r\n\t\t\t\t    this.setState({deliveryStatus : 'error happened, may be a test message???'});\t   \r\n\t\t\t    }\r\n\t\t\t \r\n\t\t\t    this.runSomeActionsOnAjaxResult();\r\n\t\t\t \r\n            }.bind(this),  //end success //{.bind(this)} is a must otherwise setState won't work in success\r\n\t\t\t    error: function (error) {\r\n                    swal(\"Error!\", \"Failed to check delivery!\", \"error\");\r\n\t\t\t\t    //update this.state.deliveryStatus\r\n\t\t\t\t    this.setState({deliveryStatus : 'Check delivery error'});\r\n\t\t\t\t    this.runSomeActionsOnAjaxResult();\r\n\t\t\t \r\n                }.bind(this) //{.bind(this)} is a must otherwise setState won't work in success\t\r\n        });\r\n\t  \r\n    }\r\n  \r\n    //run some action both on ajax success/fail\r\n    // **************************************************************************************\r\n    // **************************************************************************************\r\n    //                                                                                     **\r\n    runSomeActionsOnAjaxResult(){\r\n        $(\".ajax-loader\").fadeOut(3000); //hide loader\t  \r\n\t    //update/uplift {this.state.ifUserClickedCheckDelivery} in <TextArea/>, which is passed here as {this.props.ifUserClickedCheckDeliveryData} \r\n\t    this.props.handleToUpdateIfDeliverClicked(true);\r\n\t\t\t \r\n\t    //Scroll to results in Mobile only\r\n\t    //if(window.screen.width <= 640){ \r\n\t        this.scrollResults(\".btn-scroll\"); //scroll the page down to .btn-scroll\r\n\t     //}\r\n\t\t\t \r\n\t    setTimeout(function(){\r\n\t        $(\".child-div\").css('opacity', '0'); //hides yellow overlay div -> react imitation of animation, analogue of{$(\".del-st\").stop().fadeOut(\"slow\",function(){ /*$(this).html(finalText) */}).fadeIn(3000);\r\n\t    }, 3000);\r\n\t   \r\n    }\r\n  \r\n    //RENDER ------------------------------------------------\r\n    render() {\r\n\t\r\n        //iterate over state Object{}, if  typeof(state) == OBJECT\r\n        var myObjX = this.props.answer;   \r\n        const itteratedArray = Object.keys(myObjX).map(function(key, index) {\r\n            return <span key={index}> #{key} => {myObjX[key]} &nbsp;&nbsp; </span> //index is i++;  key is Object key name;  myObjX[key] is the value of key //toString() is do display Boolean true/false\r\n        });\r\n\r\n\t \r\n        return (\r\n\t        <div className='col-sm-12 col-xs-12 resultScroll'> \r\n\t\t      <div className='col-sm-3 col-xs-0'></div>  {/*  just to center */}\r\n\t          <div className={'col-sm-6 col-xs-12' + (this.props.showHideDivData ? ' show-div': ' hide-div')}>\r\n\t   \r\n\t          {/* Shows this.state.answerFromTextbelt (type Object*) from Textarea.js. Most technical info */}\r\n\t\t      {/* <div className={'col-sm-12 col-xs-12 textbelt-answer font-small' + (this.props.answer.success? ' sms-sent': ' sms-not-sent')}> */} {/* if this.state.answerFromTextbelt.success is set as TRUE in Textarea.js, set css class 'sns-sent' */}\r\n\t\t      {/*this.props.answer */} \r\n\t\t      {/*{itteratedArray}*/} {/* Shows => success => true textId => 888888888 quotaRemaining => 1 */} \r\n\t\t      {/* </div> */}\r\n\r\n\t\t      {/* Message for client, My custom message: Message Sent/was not sent */}\r\n\t\t      <div className={'col-sm-12 col-xs-12  parent-div-sms'}>\r\n\t\t        <div className=\"col-sm-12 col-xs-12 textbelt-answer child-div-sms\">{/* overlay loader, hidden by default */}\r\n                  <p>This should be over the parent</p>\r\n\t\t\t\t    <img src={loaderX1}  className=\"delivery-loader-sms\" alt=\"logo\" />  \r\n                </div>\r\n\t\t\t\r\n\t\t        {/* Message for client, My custom message: Sent/was not sent */}\r\n\t\t        <div className={'col-sm-12 col-xs-12 textbelt-answer' + (this.props.answer.success? ' sms-sent': ' sms-not-sent')}> {/* if this.state.answerFromTextbelt.success is set as TRUE in Textarea.js, set css class 'sns-sent' */}\r\n\t\t          <p>{this.props.answer.clientMessage}</p>{/* Shows=> My custom: Sent/was not sent*/} \r\n\t\t\t      <p> Api Success: {this.props.answer.success.toString()}</p> {/* True/false status from TextBelt */} \r\n\t\t\t      <p> Api error: {this.props.answer.errorFromApi}</p>  {/* error status from Classes/SendSms.php, value from($errorX)*/} \r\n\t\t\t\t  <p> Left: {this.props.answer.quotaRemaining} quota</p> \r\n\t\t\t      <p> if Test Sms: {this.props.ifTestModeData2.toString()} </p>\r\n\t\t        </div> \t\r\n\t\t\t</div> {/* parent-div-sms */}\r\n\r\n\t\t    {/* If sms is sent, show button \"check delivery\" */}\r\n\t\t    <div className={'col-sm-12 col-xs-12 btn-scroll' + (this.props.answer.success? ' show-delivery-button': ' hide-delivery-button')}>\r\n\t\t      <input type=\"button\" className=\"btn btn-success btn-md el\" value=\"Check Delivery\"  onClick={this.checkSmsDeliveryStatus}/>\r\n\t\t    </div>\r\n\t\t   \r\n\t\t   \r\n\t\t    {/* Div to show sms delivery status */}\r\n\t\t    <div id=\"delivText\" className={'col-sm-12 col-xs-12 textbelt-answer del-st parent-div' + ((this.props.answer.success && this.props.ifUserClickedCheckDeliveryData)? ' show-div': ' hide-div') + (this.state.deliveredOK? ' deliv-ok': ' deliv-fail')}>\r\n\t\t\t  <div className=\"child-div\">{/* overlay loader, hidden by default */}\r\n                <p>This should be over the parent</p>\r\n\t\t\t\t  <img src={loaderX}  className=\"delivery-loader\" alt=\"logo\" />  \r\n              </div>\r\n\t\t\t   \r\n\t\t\t  {/* Show delivery text*/}\r\n\t\t\t  <p><i className=\"fa fa-envelope-o fa-2x\" ></i></p>\r\n\t\t\t  <p>{this.state.deliveryStatus}</p>\r\n\t\t    </div>\r\n\t\t</div>\r\n    </div>\r\n\t  \r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultFromTextbeltApi;\r\n","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport '../../css/TextArea.css';\r\nimport {myValidate} from './functions_injected/Validate_RegExp'; //import function\r\nimport 'jquery-ui';\r\nimport 'jquery-ui/themes/base/autocomplete.css';  //according to folder structure in node_modules\r\nimport {AutocompleteFunction} from './functions_injected/Autocomplete'; //import my function\r\nimport {sendSmsMessage} from './functions_injected/sendSmsMessage'; //import my function to send sms\r\nimport {scrollResults} from './functions_injected/scrollResults'; //import my function to scroll\r\nimport DisplayPhoneRegExpMessage from './child_components/DisplayPhoneRegExpMessage';\r\nimport CountSmsText from './child_components/CountSmsText';\r\nimport FlashMessage from './child_components/FlashMessage';\r\nimport AjaxLoader from './child_components/AjaxLoader';\r\nimport ResultFromTextbeltApi from './child_components/ResultFromTextbeltApi';\r\n\r\n\r\nclass TextAreaX extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n\t\r\n\t    this.RegExp_Phone = /^[+][\\d]{8,9}[0-9]+$/;       //phone number regExp for world wide\r\n\t    this.RegExp_Phone_UA = /^[+]380[\\d]{2}[0-9]{7}$/; //phone number regExp for Ukraine //must have strict +380 & 9 digits ///^[+]380[\\d]{1,4}[0-9]+$/;\r\n\r\n\t    this.limitLatin = 120; //limit for chars in sms\r\n\t    this.limitCyrill = 70; //limit for Ru chars in sms\r\n\t\r\n\t\r\n        this.state = {\r\n\t\t    phoneNumberChild : \"+380\",\r\n\t\t    smsTextChild : \"\", //I am set manually in state in child <Textarea/>\r\n\t\t    phoneNumberErrorMessage : \"phone number message\",\r\n\t\t    isEnable: false, //true/false state to deisable/enable submit button  (tempo disabled)\r\n\t\t    limitForSmstext : this.limitLatin, //limit for chats in sms text, set by ifCyrillicSmsCheck(), by default limit is 120\r\n\t\t    //testMode : true,  //true by default, updated/uplifted from <TopSectionButtons/> //used to switch between test/prod mode, when in test mode, Api uses on server side TextBelt test key {\"textbelt_test\"}\r\n\t\t    ifTestMode: this.props.ifTestModeData,  //test/prod flag (set in <TopSectionButtons/>, uplifted to <App/> and passed here)\r\n\t\t    answerFromTextbelt : {success:false, textId:'', quotaRemaining: '', clientMessage:'', errorFromApi: ''},\r\n\t\t    ifUserClickedSendSms : false, //to detect if used clicked sendind sms (to decide if to show Div with \"Message sent/not sent\")\r\n\t\t    ifUserClickedCheckDelivery: false, //to detect if used clicked button \"Check delivery status\" (to decide if to show Div with \"Delivered/Not Delivered\" Status). used in <ResultFromTextbeltApi/>. Updated/uplifted from there too.\r\n        };\r\n \r\n        // This binding is necessary to make `this` work in the callback\r\n\t    this.run_This_Component_Functions_In_Queue = this.run_This_Component_Functions_In_Queue.bind(this); //runs all functions together\r\n\t    this.getFormValue = this.getFormValue.bind(this);\r\n\t    this.handlePhoneNumberKeyPress = this.handlePhoneNumberKeyPress.bind(this); //sends this.state.phoneNumberChild to parent <App/> to set it in parent's state {state.phoneNumber}\r\n\t    this.handleTextAreaKeyPress = this.handleTextAreaKeyPress.bind(this); //sends this.state.smsTextChild to parent <App/> to set it in parent's state {state.smsText}\r\n        this.resetFields = this.resetFields.bind(this);\r\n\t    this.myValidate = myValidate.bind(this); //for injected from files function, for non-injected function use {this.myValidate.bind(this);}\r\n\t    this.AutocompleteFunction = AutocompleteFunction.bind(this); //for binding this class/file functions\r\n\t    this.ifCyrillicSmsCheck = this.ifCyrillicSmsCheck.bind(this);\r\n\t    this.handleTextAreaPaste = this.handleTextAreaPaste.bind(this);\r\n\t    this.sendSmsMessage = sendSmsMessage.bind(this); //for injected from files function\r\n        this.scrollResults = scrollResults.bind(this); //for injected from files function\r\n    }\r\n  \r\n    componentDidMount(){\r\n\t    //JQ UI autocomplete from injected function.\r\n\t    this.AutocompleteFunction();\r\n    }\r\n   \r\n    componentWillMount(){\r\n    }\r\n   \r\n    //uplifting\r\n    handleToUpdateIfDeliverClicked(someArg){\r\n\t\tthis.setState({ifUserClickedCheckDelivery:someArg});\r\n\t}\r\n\t\r\n    /*\r\n    |--------------------------------------------------------------------------\r\n    | runs all functions together on submit button click\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    |\r\n    */\r\n    run_This_Component_Functions_In_Queue() {\t  \r\n\t    if ($(\"#sendButton\").is(\":disabled\")) {  \r\n            swal(\"Stop!\", \"Button disabled, incorrect phone number\");\r\n        }\r\n\t  \r\n\t \r\n\t  \r\n\t    //if texarea is empty, stop anything further, show/hide <Error/> component\r\n\t    if(this.getFormValue() === false) {\r\n            /*\r\n\t\t    setTimeout(function(){\r\n\t\t        $(\"html, body\").animate({ scrollTop: 0 }, \"slow\"); //scroll the page to top(mostly for mobile convenience)\r\n                $('.App').addClass('blur');  //blur the background\r\n\t\t        $(\".error-parent\").fadeIn(1500); //show error gif from <Error/>\r\n\t\t    }, 2000); // A delay of 1000ms\r\n\t\t\r\n\t\t    setTimeout(function(){\r\n                $('.App').removeClass('blur'); //removes blur from background\r\n\t\t\t    $(\".error-parent\").fadeOut(1000); //hide error gif from <Error/>\r\n            }, 3000); // A delay of 1000ms\r\n\t\t    */\r\n\t    } else if(this.getFormValue() === true) {\r\n\t        //send the sms message with axios if this.getFormValue == TRUE\r\n            this.sendSmsMessage();\r\n\t    }\r\n\t   \r\n    }\r\n  \r\n  \r\n    /*\r\n    |--------------------------------------------------------------------------\r\n    | gets the textarea value, splits it to array and sets to state\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    |\r\n    */\r\n    getFormValue(){\r\n\t\tif (this.state.smsTextChild.trim() === \"\"){ \r\n\t\t    swal(\"Stop!\", \"No sms text!\", \"error\");\r\n            return false;\t\t \r\n\t    }\r\n\t   \r\n\t    if (this.state.phoneNumberChild.trim()=== \"\"){\r\n\t\t    swal(\"Stop!\", \"No cell number!\", \"error\");\r\n            return false;\t\t \r\n\t    }\r\n\t   \r\n\t    //decides what regExt to use, if it is ua number use RegExp for ua numbers\r\n\t    if (this.state.phoneNumberChild.match(/^\\+380/)){  //if it is ua number use RegExp for ua numbers\r\n\t        var regExpp = this.RegExp_Phone_UA; \r\n        } else {\r\n\t\t    var regExpp = this.RegExp_Phone; \r\n\t    }\t\t\t\r\n\t\t\t\r\n\t   //checks if cell number is correct, uses regular expressions RegExp_Phone_UA or RegExp_Phone. Additionally RegExp checking is used on cell number keypress (js/validate_regExp.js)\r\n\t\tif (!this.state.phoneNumberChild.match(regExpp)){\r\n            swal(\"Stop!\", \"Phone number incorrect\", \"warning\");\r\n            return false;\r\n\t\t}\r\n\t\t\r\n\t\t//if all is OK\r\n\t\treturn true;\r\n \r\n    }\r\n \r\n   \r\n   \r\n    /*\r\n    |--------------------------------------------------------------------------\r\n    | On key press in phone number input, take its value, set it to {this.state.phoneNumberChild} and send it to parent component's state in <App/>\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    |\r\n    */\r\n    handlePhoneNumberKeyPress (event) {\r\n\t    var inputPhone = event.target.value; //i.e == $(\"#cellNumberInput\").val()\r\n\t   \r\n\t    if (inputPhone.match(/^\\+3/)) {  //decides what regExt to use, if it is ua number use RegExp for ua numbers //if( inputPhone.match(/^\\+380/)){ \r\n\t        var regExpp = this.RegExp_Phone_UA; \r\n\t\t    var messageError = ' incomplete UA number';\r\n\t\t    var messageOK = \"UA\";\r\n        } else {\r\n\t\t    var regExpp = this.RegExp_Phone; \r\n\t\t    var messageError = ' incomplete EU number';\r\n\t\t    var messageOK = \"EU\";\r\n\t    }\r\n\t \r\n        this.myValidate(inputPhone, this.id, regExpp, 'sendButton', messageError, messageOK, event);   //{e} new must have arg\r\n\t   \r\n\t    //asynchronous\r\n        this.setState({phoneNumberChild: event.target.value} \r\n\t     , () => {\r\n            //sends {this.state.smsTextChild} to parent <App/>, send it as callback\r\n\t        this.props.liftPhoneNumberHandler(this.state.phoneNumberChild);\r\n        });   \r\n    }\r\n   \r\n  \r\n\r\n    /*\r\n    |--------------------------------------------------------------------------\r\n    | On key press in sms textarea, take texterea value, set it to {this.state.smsTextChild} and send it to parent component's state{state.smsText} in <App/>\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    |\r\n    */\r\n    handleTextAreaKeyPress (event) {\r\n\t    var smsText;\r\n\t   \r\n\t    //decide what limit to use for sms text input (based if text contain russ chars)\r\n\t    if(this.ifCyrillicSmsCheck()){\r\n\t\t    this.setState({limitForSmstext: this.limitCyrill});\r\n\t\t\t//this.limit = this.limitCyrill; //70;\r\n\t\t} else {\r\n\t\t    //this.limit = this.limitLatin; //120;\r\n\t\t\tthis.setState({limitForSmstext: this.limitLatin});\r\n\t\t}\r\n\t    var texted = event.target.value; //textarea input\r\n\r\n\t    //Check if current sms textarea input is no bigger than limit(this.state.limitForSmstext)\r\n\t    if(texted.length >= this.state.limitForSmstext){\r\n            \r\n\t\t    //flash message to show that limit is reached\r\n\t\t    $(\".flash-message\").clearQueue().fadeIn(100).fadeOut(900);\r\n\t\t    smsText = event.target.value.substring(0, this.state.limitForSmstext); //trim sms to limit length\r\n\t    \r\n        } else {\r\n\t\t   \r\n\t\t   smsText = event.target.value;\r\n\t    }\r\n\t   \r\n\t    // Update this.state.smsTextChild with new sms textarea input.\r\n        this.setState({smsTextChild: smsText /*event.target.value*/}\r\n\t        , () => {\r\n            //sends {this.state.smsTextChild} to parent <App/>\r\n\t        this.props.liftSmsTextHandler(this.state.smsTextChild);\r\n        });  \r\n    }\r\n   \r\n   \r\n   \r\n    /*\r\n    |--------------------------------------------------------------------------\r\n    | on paste to sms textArea\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    |\r\n    */\r\n    handleTextAreaPaste(e){\r\n\t    var smsText;\r\n\t    var pastedData = e.clipboardData.getData('Text'); //gets the paste text\r\n\t    e.preventDefault(); //must-have to work without errors\r\n\t   \r\n\t    //if current sms text in textarea or clipboard text contains russian\r\n\t\tif(this.ifCyrillicSmsCheck() || pastedData.match(/[а-яА-ЯЁё]/)){ \r\n\t\t\tthis.setState({limitForSmstext: this.limitCyrill});\r\n\t\t\t//this.limit = this.limitCyrill; //70;\r\n\t\t} else {\r\n\t\t    //this.limit = this.limitLatin; //120;\r\n\t\t\tthis.setState({limitForSmstext: this.limitLatin});\r\n\t\t}\r\n\t\t\r\n\t\t//Check if current sms textarea input is no bigger than limit(this.state.limitForSmstext)\r\n\t    if(pastedData.length >= this.state.limitForSmstext){\r\n            \r\n\t\t    //flash message to show that limit is reached\r\n\t\t    $(\".flash-message\").clearQueue().fadeIn(100).fadeOut(700);\r\n\t\t    smsText = pastedData.substring(0, this.state.limitForSmstext); //trim sms to limit length\r\n\t    } else {\r\n            \r\n\t\t   smsText = pastedData;\r\n\t    }\r\n\t   \r\n\t    // Update this.state.smsTextChild with new sms textarea input.\r\n        this.setState({smsTextChild: smsText /*event.target.value*/}\r\n\t        , () => {\r\n            //sends {this.state.smsTextChild} to parent <App/>\r\n\t        this.props.liftSmsTextHandler(this.state.smsTextChild);\r\n        });\r\n    }\r\n   \r\n   \r\n    /*\r\n    |--------------------------------------------------------------------------\r\n    | clear the states, ie. fields.\r\n    |--------------------------------------------------------------------------\r\n    |\r\n    |\r\n    */\r\n    resetFields(){\r\n\t    this.setState({phoneNumberChild: \"\"}); //reset phone number\r\n\t    this.setState({smsTextChild: \"\"});     //reset sms text\r\n\t    this.setState({phoneNumberErrorMessage: \"\"}); //reset error message for phone number\r\n\t    this.setState({ifUserClickedSendSms: false}); //set false to hide Div with result in <ResultFromTextbeltApi/>\r\n\t   \r\n\t    //reset vallues in this.state.answerFromTextbelt (Variant for Object).In order to hide prev Delivery status\r\n\t    this.setState(prevState => ({\r\n            answerFromTextbelt: {    // object that we want to update\r\n                ...prevState.answerFromTextbelt,    // keep all other key-value pairs\r\n                success: false, textId:'',  // update the Object with key:value\r\n\t\t\t    quotaRemaining:'', clientMessage:'',errorFromApi: ''\t\t\t\t\t\r\n            }\r\n        }));\r\n           \r\n    }\r\n\t  \r\n  \r\n    /*\r\n    |--------------------------------------------------------------------------\r\n    | method to check if sms text ru or engl \r\n    |--------------------------------------------------------------------------\r\n    |\r\n    |\r\n    */\r\n    ifCyrillicSmsCheck() { \r\n        var ruText = /[а-яА-ЯЁё]/;\t\r\n\t    if( $('#smsTextInput').val().match(ruText)){  //alert('ru');\r\n\t        return true;\r\n\t    } else {\r\n\t\t    return false;\r\n        }\r\n\t}   \r\n\t\r\n\r\n  \r\n    //RENDER --------------------------\r\n    render() {\r\n\t    var handleToUpdateIfDeliverClicked  = this.handleToUpdateIfDeliverClicked; //uplift to <TextArea/>\r\n        return (\r\n\t      <div>\r\n\t\t  {/*<CopyLayout/>*/}\r\n\t        <form className=\"textarea-my\">\r\n\t\t      <div className=\"form-group\">\r\n\t\t\t    <DisplayPhoneRegExpMessage status={this.state.isEnable} phoneNumberErrorMessageX={this.state.phoneNumberErrorMessage}/> {/* Message if RegExp founds cell number OK/or NOT*/}\r\n\t\t\t    {/*<span className={this.state.isEnable ? 'err-mess-wrong phone-error' : 'err-mess-ok phone-error'} > {this.state.phoneNumberErrorMessage} </span> */ }  {/* Message if RegExp founds cell number OK/or NOT*/}\r\n\t\t\t\t<input type=\"text\" id=\"cellNumberInput\"  placeholder=\"Cell number\" className=\"form-control shadow-xx shadow-text\" value={this.state.phoneNumberChild} onChange={this.handlePhoneNumberKeyPress}/> \r\n\t\t\t  </div>\r\n\t\t\t \r\n\t\t\t  <div className=\"form-group\">\r\n                <textarea id=\"smsTextInput\" rows=\"8\" cols=\"80\" placeholder=\"Your sms...\" className=\"form-control shadow-xx shadow-text\" value={this.state.smsTextChild}  onChange={this.handleTextAreaKeyPress} onPaste={this.handleTextAreaPaste}/> \r\n\t\t\t  </div>\r\n\t\t\t\t \r\n\t\t\t  <CountSmsText smsText={(this.state.limitForSmstext - this.state.smsTextChild.length)}/> {/* count chars left for smsText, i.e current limit - currentText length */}\r\n\r\n\t\t\t  <div className=\"form-group buttonsX\">\r\n                <input type=\"button\" className=\"btn btn-success btn-md el\" value=\"Send\" id=\"sendButton\" onClick={this.run_This_Component_Functions_In_Queue} /* disabled = {this.state.isEnable} */ /> {/* Functionality to disable button if cell number is not OK is TURNED OFF HERE */}\r\n\t\t\t    <input type=\"button\" className=\"btn btn-primary btn-md el\" value=\"Reset\" id=\"\" onClick={this.resetFields} />\r\n\t\t\t\t{/*<input type=\"button\"  value=\"Lift Coords\" onClick={() => liftFinalCoordsHandler('Lifted_TextArea')}/> */}\r\n\t\t\t  </div>  \t\t\r\n\t\t\t\t\r\n            </form>\r\n\t\t\t \r\n\t        <ResultFromTextbeltApi answer={this.state.answerFromTextbelt} \r\n                                   ifTestModeData2={this.props.ifTestModeData}  \r\n\t\t\t                       showHideDivData={this.state.ifUserClickedSendSms} ifUserClickedCheckDeliveryData={this.state.ifUserClickedCheckDelivery} \r\n\t\t\t                       handleToUpdateIfDeliverClicked = {handleToUpdateIfDeliverClicked.bind(this)}/>\r\n\t\t\t \r\n\t\t\t <AjaxLoader/>\r\n\t\t     <FlashMessage/>  {/* Left 0 chars */}\r\n\t\t</div>\r\n\t  \r\n    );\r\n  }\r\n}\r\n\r\nexport default TextAreaX;","//USED in <TextArea/> as injected function \r\nimport $ from 'jquery';\r\n\r\n//Function that Validates inputs on change.\r\nexport function myValidate (thisX, id, regExp, butttonToDisable,  messageErr, messageSuccess, e) { \r\n//{e} -. it is change event from {$(document).on(\"change\", '.fileCheck', function(e) { }\r\n//args(input, $this.id, RegExp, button to disable, error message to show, event) \r\n    if (thisX !=='') {\r\n\t\t//gets the input\r\n        var idm = thisX;\r\n\r\n        //if  REgEXp  match\r\n        if (idm.match(regExp)){ \r\n\t\t    this.setState({phoneNumberErrorMessage: 'correct ' + messageSuccess + ' phone'});\r\n\t\t\tthis.setState({isEnable : false});\r\n            $(\"#\" + butttonToDisable).html('OK');\r\n                      \r\n        } else {  //if RegExp does not  match\r\n\t\t    this.setState({phoneNumberErrorMessage: messageErr});\r\n\t\t\tthis.setState({isEnable : true});\r\n            //$('.phone-error').html('<span style=\"color:red;padding:0.1em 1em;background: white;\">' + messageErr + '</span>');//thisX.prevAll(\".sp\").html(messageErr);   //$(\"#\" +id).prevAll(\".sp:first\").html(messageErr);   //finds the 1st prev span\r\n\t\t\t//$(\"#\" + butttonToDisable)/*$(':input[type=\"submit\"]')*/.prop('disabled', true);\r\n            $(\"#\" + butttonToDisable).html/*val*/('Disabled');\r\n        }\r\n   \r\n    } else {//if  the input is empty, set no  error to span\r\n\t      this.setState({phoneNumberErrorMessage: '*'});\r\n\t\t  this.setState({isEnable : false});\r\n         $(\"#\" + butttonToDisable).html('OK');  \r\n\t\t return false;\r\n    } \r\n}\t\r\n\t   ","//USED in <TextArea/> as injected function \r\nimport $ from 'jquery';\r\nimport 'jquery-ui/ui/widgets/autocomplete';\r\nimport 'jquery-ui/themes/base/autocomplete.css';  //according to folder stucture in node_modules\r\nimport swal from 'sweetalert';\r\n\r\n\r\n//Function that Validates inputs on change (confirm delete 2nd arg (id)?????).\r\n// **************************************************************************************\r\n// **************************************************************************************\r\n//                                                                                     ** \r\nexport function AutocompleteFunction (){ \r\n    swal(\"Phone numbers autocomplete is ON\", \"---\", \"warning\");\r\n    var availablePhoneTags = [ \r\n\t\t{label: \"+420\", value : \"Czech\"},\r\n\t\t{label: \"+45\",  value : \"Denmark\"},\r\n\t\t{label: \"+49\",  value : \"Germany\"},\r\n\t\t{label: \"+972\", value : \"Israel\"},\r\n        {label: \"+48\",  value : \"Poland\"},\r\n        {label: \"+46\",  value : \"Sweden\"},\t\t\t\t\t\t\t\r\n\t\t{label: \"+38\",  value : \"Ukraine\"},\r\n\t    {label: \"+44\",  value : \"United Kingdom\"},\t\t\t\t\t\t\t  \r\n    ];\r\n\t\t\r\n\t//must-have this context, CHANGE FOR REACT!!!!!!!!!\r\n    var that = this;\r\n\t\t\r\n\t//fix function for autocomplete (u type email in <input id=\"userName\">, get autocomplete hints and onSelect puts email value (i.e user ID to) to hidden <input id=\"userID\">)\r\n\tfunction displaySelectedCategoryLabel(event, ui, that) {\r\n        //sets the selected to state in parent <TextArea/>\r\n        that.setState({phoneNumberChild: ui.item.label}); \r\n\t    that.handlePhoneNumberKeyPress(event); //reTrigger function that normally works on phone number change, validates number and uplift to parent <app/>\r\n        event.preventDefault();\r\n    };\r\n\t\t\t\r\n\t\t\r\n\t//Autocomplete itself\r\n\t$(\"#cellNumberInput\").autocomplete({\r\n        minLength: 1,\r\n        source: availablePhoneTags, //array of objects for autocomplete\r\n\t\tselect: function (event, ui) {\r\n            displaySelectedCategoryLabel(event, ui, that); //$(\"#cellNumberInput\").val(ui.item.label);/displaySelectedCategoryLabel(event, ui);\r\n        },\r\n    })\r\n\t//build custom hints display\r\n\t.autocomplete( \"instance\" )._renderItem = function( ul, item ) {\r\n        return $(\"<li>\")\r\n        .append(\"<div>\" + item.label + \" => \" + item.value + \"</div>\")\r\n        .appendTo(ul);\r\n    };\r\n}\t","import React, { Component } from 'react';\r\nimport errorIMG from '../../images/error.gif';\r\nimport '../../css/Error.css';\r\n//import $ from 'jquery';\r\n//import axios from 'axios';\r\n\r\nclass ErrorLayout extends Component {\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t\t//addressArray: [],  //this state will hold array with separ addresses\r\n    };\r\n  }\r\n  \r\n  //RENDER ------------------------------------------------\r\n  render() {\r\n    return (\r\n\t    <p className=\"error-parent\">\r\n\t\t    {/* Hidden loading copy indicator */}\r\n\t\t    <span id='error_loading'>\r\n\t\t\t    <img src={errorIMG}  className=\"error-img\" alt=\"logo\" />  {/*  hidden by default */}\r\n\t\t    </span>  \r\n\t\t</p>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default ErrorLayout;\r\n","import React, { Component } from 'react';\r\n//import $ from 'jquery';\r\n\r\nclass LiftedTo_Component extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\t\r\n        };\r\n    }\r\n  \r\n  //RENDER ------------------------------------------------\r\n  render() {\r\n\t  //iterate over array to form list \r\n\t  const newV = this.props.passedtechInfoValue.map(function(item, i){\r\n\t     return <li key={i}>{item}</li>\r\n      });\r\n\t  \r\n    return (\r\n\t   <div className=\"lifted-to\">\r\n\t\t   <h5>\r\n\t\t       <p className=\"underline\">\r\n\t\t           Displays parent App.js states, which are updated/uplifted from TextArea.js and TopSectionButtons.js  => \r\n\t\t\t   </p>\r\n\t\t       \r\n\t\t\t   <p className=\"underline\">\r\n\t\t           Phone number and sms are uplifted from TextArea to App.js just for test control, as when sending a sms, this app uses state values from Textarea, while TestMode Status is used from App.js (and passed from App.js to TextArea.js as props)\r\n\t\t\t   </p>\r\n\t\t\t   \r\n\t\t       <p className=\"underline\">\r\n\t\t           Passed States (passed from parent App.js) are:\r\n\t\t\t   </p>\r\n\t\t\t   \r\n\t\t\t    <p>\r\n\t\t\t      {this.props.passedPhoneNumberValue} {/* here goes lifted from Parent app.js value*/}\r\n\t\t\t   </p>\r\n\t\t\t   \r\n\t\t\t   <p>\r\n\t\t\t       {this.props.passedSmsValue} {/* here goes lifted from Parent app.js value*/}\r\n\t\t\t   </p>\r\n\t\t\t   \r\n\t\t\t   <p>\r\n\t\t\t     <b>Test:</b> {this.props.passedIfTestModeValue.toString()} {/* uses .toString() otherwise boolean won't be displayed */}\r\n\t\t\t   </p>\r\n\t\t\t   \r\n\t\t\t   {/* Shows alerts info */}\r\n\t\t\t   <p>\r\n\t\t\t       <b>TechInfo:</b> {newV} {/* */}\r\n\t\t\t   </p>\r\n\t\t\t   \r\n\t\t   </h5>    \r\n\t   </div>\r\n\t  \r\n    );\r\n  }\r\n}\r\n\r\nexport default LiftedTo_Component;","import React, { Component } from 'react';\r\nimport '../../css/Technical_Info.css';\r\nimport LiftedToComponent from '../LiftUpComponent/LiftedTo_Component';\r\n\r\nclass TechnicalInfo extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\t\r\n        };\r\n    }\r\n  \r\n  //RENDER ------------------------------------------------\r\n  render() {\r\n      return (\r\n\t\t<div className=\"col-sm-12 col-xs-12\"> \t \r\n          <div className=\"dropdown\">\r\n              <input type=\"button\" className=\"btn btn-primary border-x\" data-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\" value=\"Technical Info\" />\r\n\t\t\t\t  \r\n              <div className=\"collapse col-sm-12 col-xs-12 text-left\" id=\"collapseExample\">\r\n\t\t\t         <p className=\"underline\"> Alerts Replacer (TechnicalInfo/> -- uses LiftUpComponent/ LiftedToComponent/>): </p>\r\n\t\t\t\t     {/* {constructed_answer} */} {/* alerts goes there */}\r\n\t\t\t\t\t \r\n\t\t\t\t\t {/* <LiftedFrom_Component handleToUpdate = {handleToUpdate.bind(this)}/>  */ } { /* LiftedComponent component, send/uplift value onClick to App.js */ }\r\n\t\t\t\t\t <LiftedToComponent passedSmsValue={this.props.smsTextData}  passedPhoneNumberValue={this.props.phoneNumberData} passedIfTestModeValue={this.props.ifTestModeData}  passedtechInfoValue={this.props.techInfoDate} />               { /* LiftedComponent component for displaying states from App.js */ }\r\n\t\t\t\t\t {/*<State_Array_List_Builder numbers={this.props.numbers}/>  */ }         {/*techInfoHandler={techInfoHandler.bind(this)}*/}   {/* Component creates List from State Array*/}\r\n              </div>\r\n\t\t\t \r\n          </div>\r\n\t\t</div>\r\n\t  \r\n    );\r\n  }\r\n}\r\n\r\nexport default TechnicalInfo;\r\n","import React, { Component } from 'react';\r\nimport '../../css/TopSectionButtons.css';\r\nimport {changeThemeInjected} from './functions_injected/changeThemeInjected'; //import my function\r\n\r\nclass TopSectionButtons extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\t\t    wallPapperCount : 0,\r\n\t\t    ifTestMode : true,\r\n\t\t    testButtonText : 'Test mode'\r\n        };\r\n \r\n        //This binding is necessary to make `this` work in the callback\r\n\t    this.runChangeThemeFunct = this.runChangeThemeFunct.bind(this);\r\n\t    this.changeThemeInjected = changeThemeInjected.bind(this); //for injected from files function\r\n\t    this.runChangeTestModeFunct = this.runChangeTestModeFunct.bind(this);\r\n    }\r\n  \r\n    //run changing theme, uses injected file\r\n    runChangeThemeFunct(){\r\n\t    this.changeThemeInjected();    \r\n    }\r\n \r\n    //change Test Mode/Production mode on button click\r\n    runChangeTestModeFunct(){\r\n\t    //toogle the state \r\n\t    this.setState(prevState => ({\r\n            ifTestMode: !prevState.ifTestMode\r\n        })\r\n\t    //as it async, then do...\r\n\t    , () => { \r\n\t\t    //uplift the state \r\n\t\t    //sends {this.state.smsTextChild} to parent <App/>, send it as callback\r\n\t        this.props.liftTestModeStatustHandler(this.state.ifTestMode);\r\n\t\t  \r\n\t\t    //change the text of button by state\r\n\t        if(this.state.ifTestMode === true){\r\n\t\t        this.setState({testButtonText: \"Test Mode\"}); \r\n\t\t    } else {\r\n\t\t\t    this.setState({testButtonText: \"Prod Mode\"});\r\n\t\t    };\r\n        });\r\n    }\r\n  \r\n    //RENDER ------------------------------------------------\r\n    render() { \r\n        return (\r\n\t        <div className=\"col-sm-12 col-xs-12 top-buttons\"> \t \r\n              <button className=\"btn btn-sm btn-my shadowX change-theme\" onClick={this.runChangeThemeFunct} >Theme <i className=\"fa fa-repeat\"></i></button>\r\n\t\t      {/* Test mode button*/}\r\n\t\t      <button className={this.state.ifTestMode ? 'btn-test-mode btn btn-sm btn-my shadowX btn-next' : 'btn-dev-mode btn btn-sm btn-my shadowX btn-next'} onClick={this.runChangeTestModeFunct}> {this.state.testButtonText } <i className=\"fa fa-link\"></i></button>\r\n\t\t    </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopSectionButtons;","\r\n// **************************************************************************************\r\n// **************************************************************************************\r\n// \r\n//                                                                                     ** \r\nexport function changeThemeInjected () {\r\n\t\r\n\tvar wallURL = [\r\n\t    'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQsQf2-zwuStKf6u2V2HE_nCy9rRvk5M8ag043FAenQbOrCXY3tA', //violat blocks\r\n\t\t'https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/Color_icon_purple.svg/2000px-Color_icon_purple.svg.png', //same in HD\r\n\t\t//'http://www.sensationalcolor.com/wp-content/uploads/2009/12/purple350x350.jpg', //same HD\r\n\t\t//'http://www.color-hex.com/palettes/1835.png',   //!!!!!\r\n\t\t'http://paperlief.com/images/blue-purple-gradient-wallpaper-2.jpg',  //puprle gradient\r\n\t\t//'http://paperlief.com/images/purple-color-gradient-wallpaper-1.jpg',  //deep blue\r\n\t\t'http://marcialmiller.com/wordpress/wp-content/uploads/2011/01/AllPatternBlockDesignbyBen-300x266.jpg',\r\n\t\t'http://marcialmiller.com/wordpress/wp-content/uploads/2011/01/Rowof5Hexagons-300x137.jpg',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTDhtR1BhDwTew8S7AJcbI94v0UFv2pjXwt2kdsqBSxfcgi8uObLg',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSv-cxQe9A6rZsR8JUE_zJwX5S94nVXyaIy1H6NyhTNw1S_sv-P',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTvhyI_kI_Xaw_-a-MRTYeFpVWGlS9-zrP-mdDl_XTPh71wGuV6Mw',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRK3pJbHeAoIHUlC3DUS38TW-hYjPrEgid6HSrg-nNnT0JFz-eqyA',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS_ZKIBvxb64CAuTASJHnrBzqyX_v_QwmJORswtVHC9vU-gvi9JlA',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQmRq-OXCzPXuuxEGABGb3yK1qUeSxPMIBKtzimgUMGKUipjQZztw',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSIkwu2oXo3ZV5VpHJs0BP32y78wQyuts-GBuLcs4PgEqa03SJ0uw',\r\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQONTF91XqYYCUUD8bQFRnRouMRq4Lxp7h0PijXJMpkkjT4Djb0sQ',  //bricks\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSIgoIVKj2tvvrwKirnEvLIVp7XEE2VpyEB4HVpAopp6p-Jvppe',\r\n\t\t//'https://i0.wp.com/www.citiefy.com/wp-content/uploads/2016/04/Background_47-01-e1459829663432.jpg?fit=450%2C337', // samsung\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQQdfBdh9TMh6MZfwbE3gkcyum_qeAv4t0QQ6zRGqGbJAJlWo_P',   //blue\r\n\t\t'https://img00.deviantart.net/6ad0/i/2008/122/9/8/colorful_gradients_by_scientiaofborg.jpg',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTqyBNgb1If2M5s5u4Eqie-8BnC3D4q3ZgEirc8fXwBtUKiy96E-w',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSka_Yl4YtYQWSz2T5l64Z9LeVJwdH_LoctsnU_lXZ_BbmDVBka',  //sea\r\n\t\t'http://notgoaway.com/wp-content/uploads/2017/08/Orange-Wallpaper-158-Go.jpg',  //orange\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRWvD8MhkqMhnTziRDDqKmVWvwP2YrZ3Qk55TPs7oxP_DTwYYNrBg',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTekHPENYuvbwRmIXKoff5JHA1z3vC_XoAwbVXGgyCRE8uX6f26',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQiLABN0zBTJV8kVyBdef307WbrYkANbnLa03aWcjZ9Dj2l8cL',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRTjMtl9M8g5BwuOBIWTWCcAVJFLeiGWifLEYl8i2JakRBXXZto',\r\n\t\t'https://st2.depositphotos.com/4724153/11516/v/950/depositphotos_115160878-stock-illustration-vector-hand-drawn-pattern-for.jpg', //fml portrait \r\n\t    //'https://i.pinimg.com/originals/08/58/d6/0858d6df28c34239fe8e0077e19be750.png',  //cash\r\n        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQvp8gXVXK0Vb7ctlANuwugGW13OTnAWqriztJUGoBRXd0CXK8',    //blue\r\n        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQfDxrC1c4GaaJmBlciFeUZ8bsHheWefJXbGiUOFYOnXR5oGrVhAg',  //steel\r\n        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcScJTFmh8ur7hPYFn543z7OnYh1Kv3d51AQWWFiPDjJH8Bm7O3K',    //blue 2\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSFcDV5NdKfWnGR_cnEIO-iT-3hX_HtEpgPv5OFIhG3-Kgt_4Z0',    //green\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRZi0cgMZX4iIJRbOXYZhmzPvKVXdWM8gMSFII6VKtKJlaHEBBs8Q',    //\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSS4eUvBUEqNvtTWJqe2n0j-LrZZHpXMCLRII8gBdj66J8yyg_h',     //steel\r\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQMuDL_pJKTnIt9lWX7WxiXdQOD7pg0TMXHdS5opQixcod3IbozDQ',   // white color\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ6mN6UajC1pXOOJ11DW1OKLL-X8tZ_0LzIuw3axNFgt2veGffesw',    //very color\r\n\t\t'https://thumbs.dreamstime.com/z/sunny-seamless-pattern-yellow-orange-sun-shapes-blue-background-34440134.jpg',      //patt blue\r\n\t\t'https://rfclipart.com/image/preview/34-00-e9/seamless-color-hand-drawn-sunny-pattern-Download-Royalty-free-Vector-File-EPS-153192.jpg', //mandala\r\n        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSn0QY9pg43mzXhjbmW_N6p7ztO1R8ztK6cU8bx3Np6e-Pn8IJwRA',  //rain\r\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQt8cHzsOjY4rCNqAdG4jUJY0VseU4_3IsB5QRwNuRGJk5ed5Awtg',  //rain2\r\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSyRMbAKCXIwpkaYHqS2pPDSqWz1ko9t8uqTTfrJGFdZHciymtu',   //thunder\r\n\t\t'http://www.proactivedental.com.au/wp-content/uploads/2015/10/girl-248x300.png',   //fml\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTzEPWGOzxTXCXYCBi4WajukuQQ7Q7PlOA-FGzQsKV_cxjT2fPvxw', //sunset\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSPIBUy2Ru9gOD3vJUrRnWqCojmEftftOM0K_WvmW6fi70MDAl8',  //search\r\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTvwOeUhq4-8t_xS98RZyj6Atk-tWNIXiZphHolDpusOAAj607S', //road\r\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR1OpSRjwhd0nyJcTZYZ6lUo4v46eYVpZkSJgOizuVk0ldeFffg', //islam\r\n\t\t//'https://banner2.kisspng.com/20180308/oze/kisspng-islamic-architecture-motif-pattern-islamic-traditional-decorative-patterns-5aa104eb92d7b2.2841900615205019956015.jpg',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTYsQ04RfZT4vWwxrfTCXuBAmeG6YSpzJZtT-bPhVbxj9u0CfyZ',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRz_GlZLlJCAW4mXLKNOqvVEs8NdUOalVbzGdl9Sdwnf-wpapp7Jg',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXycguf1VLYxNuHJ_Vp0ynyEYCrn0tI76jl4fRCrnfGpod3UzWzQ',\r\n\t\t'http://www.wallpaper-box.com/smartphone/wp-content/uploads/2014/09/Colorful-abstract-wallpaper-433x191.jpg',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTbzFbadouFp0oi4agez0lv9En7GPsGyQE1G_bXQX085b7X_pfkFg',\r\n\t\t'http://getdrawings.com/image/space-drawing-56.jpg',         //space-drawing-56\r\n\t\t//'http://getdrawings.com/images/space-drawing-3.jpg',        //space black white\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQsI5s1TRhYvyua-35eDL5XbPiU3VLH9Kp15hVZECaZRheH2bVH',\r\n\t\t'https://d298hcpblme28l.cloudfront.net/product-lg/0ef1de67e9bf4a860e954aa3b1e2bad1.jpg',                  //space black\r\n\t\t'https://png.pngtree.com/element_origin_min_pic/17/08/19/0dffc570d4ae2954f3b949e5868fd774.jpg',          // star sky\r\n\t\t//'https://www.wpclipart.com/textures/floral/floral_seamless_pattern_green.png',           //green\r\n\t\t'https://banner2.kisspng.com/20180226/vzw/kisspng-coffee-green-tea-cafe-matcha-green-coffee-shop-pattern-5a94b3d232f101.3641932715196948022087.jpg',  //green cattle\r\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRzbHoI7xYqlWr1zZAtoA1tAalUJaPixTnAvZdr95QD4IKCjou3',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ3FtYsBBt6wS_Lx7mx3BeEtIKgIn30fyJXHCPkBXzUHKrrDvastQ',\r\n\t\t'https://repperpatterns.com/www/wp-content/uploads/2010/11/MWM_pattern_tile_6-558x558.jpg',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRECg7KSDri3xJSW01qbtMzRWZNt_TQzrL1d-sZ3TT5rIl8wCnW',\r\n\t\t'http://lenapechamberensemble.org/wp-content/uploads/2017/08/blue-pattern-background-photos-free-landscape-1920x1080.jpg', //main\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6SdcsdwHeRnkC6tFXIQ-2RxvVA5EAXL0oOKvZzDzFFOU-OrdXeQ',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ2pPLLyGTTLw4NmySGqEmxLqJH2SnR7VKVbO0JSP-ECA7HfNRc',\r\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTNpuzE-XYHgupP4_IMvlmNq1V497cgDDWC-YserhOiulHvMldM', //smiles\r\n\t\t'https://image.freepik.com/free-vector/green-flowers-pattern-background_1217-148.jpg',\r\n\t\t'https://naldzgraphics.net/wp-content/uploads/2014/09/Free-Fractal-Patterns.jpg',  //fracral\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTZSNkPSqE-hmJdM_MZV0Sa-QWXnC3uvYwbdTG1q0vrTxU3OApM',\r\n\t\t'https://pre00.deviantart.net/ec44/th/pre/f/2015/071/c/2/fractal_pattern_3_by_nic022-d8ldvzx.jpg', //fracral grey\r\n\t\t'http://www.fractalsciencekit.com/fractals/small/Fractal-Julia-Pattern-Map-69.jpg',  //fractal blue\r\n\t\t'http://www.fractalsciencekit.com/fractals/small/Fractal-Julia-Pattern-Map-73.jpg',  //fractal grey\r\n\t\t'http://www.fractalsciencekit.com/fractals/small/Fractal-Julia-Pattern-Map-63.jpg',\r\n\t\t'http://www.fractalsciencekit.com/fractals/small/Fractal-Julia-Pattern-Map-61.jpg',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTCbxKesoUoiNgk2TAODQmVJoefy_lxkZ6ZjmOjmysO86GCLqwJ',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQBhwXqhpym9ERAW4TFayPTk1Gdd3bct7NnATfxgGIKxPrkU-oB',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRt0q4G1wnP3MazNn7u8lY8gVU3C4A8FwQSiOHkvC1RJB5ZQqRb4Q',\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRW417ozC4rmNrHPYnf5yT6ubKJGX0VERWJIK-oMthcozvQ2l3C', // flowers-pattern-background_1217-148\r\n\t\t//'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRK5CEb0aWO3PNsjIB8_LtLtMU_KG-YhLlBcMe8k9BnFIsTZH0e-w', //tree\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcScgKP-lul4CuoNj78r4dH7UVS_Zx2uSQnStT5osSCSph7f9B1aaQ',  //cats\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSHUaNW2Q5e45JnD0ynSXD88RBnPWqPn9Z5vuxHGQtRAsKPuQGtMA', //dnb\r\n\t\t'http://notgoaway.com/wp-content/uploads/2017/08/Orange-Wallpaper-158-Go.jpg',  //orange\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQXHZrLrBJz2DPTgn82fq_c6_pFN9vj-0ABd7uzO8-aQ83HW-26', //text\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQsQf2-zwuStKf6u2V2HE_nCy9rRvk5M8ag043FAenQbOrCXY3tA', // violet WEATHER MAIN\r\n\t\t'https://www.welovesolo.com/wp-content/uploads/vector/46/Pattern-word-cloud-creative-vector-07.jpg',  //text 3\r\n\t\t'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRHbhzuoJFsUlWKBKqGRtReqUAcWg6TbphM3BPEzeQDJa-sqfl6',  //violet\r\n\t\t'',  //EMPTY\r\n    ];\r\n\r\n    var counterX = this.state.wallPapperCount;\r\n\t\t\r\n\tif ((counterX + 1) === wallURL.length) {  \r\n\t    this.setState({ wallPapperCount: 0}); \r\n\t} else { \r\n\t\tthis.setState(prevState => ({ wallPapperCount: prevState.wallPapperCount + 1 }));\r\n\t}\r\n\t\t\r\n    var cols = document.getElementsByClassName('change-head-style');\r\n\t\t\r\n    for (var i = 0; i < cols.length; i++) {      \r\n\t    try {\r\n            cols[i].style.backgroundImage = 'url(' + wallURL[this.state.wallPapperCount] + ')';\r\n\t\t} catch(err) {\r\n\t\t    alert(err.message);\r\n\t    }\r\n\t\t\t\r\n    }\r\n}\t\r\n\r\n//export default TopSectionButtons;","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './css/App.css';\r\nimport TextAreaX from './MyComponents/TextArea/TextArea';\r\nimport ErrorLayout from './MyComponents/Error/ErrorLayout';  //display error gif\r\nimport TechnicalInfo from './MyComponents/TechnicalInfoComponent/TechnicalInfo';  //displays info instead of alert\r\nimport TopSectionButtons from './MyComponents/TopSectionButtons/TopSectionButtons';  //displays buttons (change theme, test mode)\r\n/*\r\nimport Header from './MyComponents/Header/Header';\r\nimport ButtonsLayout from './MyComponents/Buttons/ButtonsLayout';\r\nimport Instructions from './MyComponents/Instructions/Instructions';\r\nimport Results from './MyComponents/Result/Results';\r\nimport TextAreaX from './MyComponents/TextArea/TextArea';\r\nimport LiftedFrom_Component from './MyComponents/LiftUpComponent/LiftedFrom_Component';\r\n*/\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\tphoneNumber : \"Phone number: I am set manually in state in parent <App/>\", //this state is to display in <TechnicalInfo/> only, when sms is sent, value is taken from <TerxAreaX/> state => phoneNumberChild\r\n\t\t\tsmsText : \"Sms text:I am set manually in state in parent <App/>\",          //this state is to display in <TechnicalInfo/> only, when sms is sent, value is taken from <TerxAreaX/> state => smsTextChild\r\n\t\t    ifTestMode : true, //true by default, it is uplifted from <TopSectionButtons/> and passed to <TerxAreaX/>, IT IS USED IN <TerxAreaX/> when sendinf Sms //used to switch between test/prod mode, when in test mode, Api uses on server side TextBelt test key {\"textbelt_test\"}\r\n\t\t\ttechInfo:['some'], //just tech info, instead of alert\r\n        };\r\n\t   \r\n        // preserve the initial state in a new object\r\n        this.baseState = []; //this.state.arg1; \t\t\r\n    } \r\n\t\r\n\t//method for catching lifted state from TextArea.js Component, triggered manually by {this.props.liftPhoneNumberHandler(this.state.phoneNumberChild);} in TerxArea.js\r\n    liftPhoneNumberHandler(somePhoneNumber){\r\n           this.setState({phoneNumber:somePhoneNumber});\r\n    }\r\n\t\r\n\t//method for catching lifted state from TextArea.js Component, triggered manually by { this.props.liftSmsTextHandler(this.state.smsTextChild);} in TerxArea.js\r\n    liftSmsTextHandler(someSmsText){\t\r\n        this.setState({smsText:someSmsText});\r\n    }\r\n\t\r\n\t//method for catching lifted state from TopSectionButtons.js Component, triggered manually by {this.props.liftTestModeStatustHandler(this.state.ifTestMode);} in TopSectionButtons.js\r\n    liftTestModeStatustHandler(someTestModeBoolValue){\r\n        this.setState({ifTestMode:someTestModeBoolValue});\r\n    }\r\n\t\r\n\t//method for catching lifted state from TextArea.js (from  functions_injected/sendSmsMessage.js), triggered manually by {liftTechAlertsInfoHandler(someAlert);} in sendSmsMessage.js\r\n\tliftTechAlertsInfoHandler(someNewAlertValue){\r\n\t\tthis.setState(prevState => ({\r\n            techInfo: [...prevState.techInfo, someNewAlertValue]\r\n        }));\r\n\t}\r\n\t\r\n\t\r\n  render() {\r\n\t  var liftPhoneNumberHandler      = this.liftPhoneNumberHandler;      //for catching lifted state from TextArea.js Component\r\n\t  var liftSmsTextHandler          = this.liftSmsTextHandler;          //for catching lifted state from TextArea.js Component\r\n\t  var liftTestModeStatustHandler  = this.liftTestModeStatustHandler; //for catching lifted state from TopSectionButtons.js Component\r\n\t  var liftTechAlertsInfoHandler   = this.liftTechAlertsInfoHandler;  //for catching lifted state from TextArea.js (from  functions_injected/sendSmsMessage.js)\r\n\t  \r\n    return (\r\n\t \r\n\t    <div className=\"wrapper grey\">\r\n            <div className=\"container\"> {/*<!-- container-full -->*/}\r\n\t            <div className=\"row row1\">\r\n                    <div className=\"col-sm-12 col-xs-12 divX App change-head-style\"> \r\n\t\t                <h4 className=\"header-x shadow-xx\"> {this.props.name} {/* props are set in index.js */} <i className=\"fa fa-envelope-o\" ></i>\r\n\t\t\t\t\t\t    <img src={logo}  className=\"react-logo-static\" alt=\"logo\" />\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t            \r\n\t\t\t\t\t\t<TextAreaX ifTestModeData={this.state.ifTestMode } liftPhoneNumberHandler = {liftPhoneNumberHandler.bind(this)}  liftSmsTextHandler = {liftSmsTextHandler.bind(this)} liftTechAlertsInfoHandler = {liftTechAlertsInfoHandler.bind(this)} />\r\n\t\t            </div>\r\n\t\t\t\t\t\r\n\t\t\t\t   <TechnicalInfo phoneNumberData={this.state.phoneNumber}  smsTextData={this.state.smsText} ifTestModeData={this.state.ifTestMode} techInfoDate={this.state.techInfo} /> { /* displays info instead of alert */ }\r\n\t\r\n\t\t\t    </div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<ErrorLayout/> { /* error gif animation component */ }  \r\n\t\t\t<TopSectionButtons liftTestModeStatustHandler = {liftTestModeStatustHandler.bind(this)} /> { /* displays buttons (change theme, test mode button)*/ } \r\n\t\t</div>\r\n  \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App  name=\"Sms Api React JS\"/>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister(); \r\n"],"sourceRoot":""}